--- a/components/autofill/core/browser/data_model/addresses/autofill_structured_address_component.cc
+++ b/components/autofill/core/browser/data_model/addresses/autofill_structured_address_component.cc
@@ -30,7 +30,7 @@ namespace {
 
 // The list of countries where the fallback parsing is not supported.
 static constexpr auto countries_not_supporting_fallback_parsing =
-    base::MakeFixedFlatSet<AddressCountryCode>({AddressCountryCode("IN")});
+    base::MakeFixedFlatSet<std::string_view>({"IN"});
 
 }  // namespace
 
@@ -499,7 +499,7 @@ void AddressComponent::ParseValueAndAssignSubcomponentsByRegularExpressions() {
   // As a final fallback, parse using the fallback method.
   // In some countries (e.g. India), the parsing cannot be reliably implemented
   // and the fallback method does more harm than good.
-  if (!countries_not_supporting_fallback_parsing.contains(GetCountryCode())) {
+  if (!countries_not_supporting_fallback_parsing.contains(GetCountryCode().value())) {
     ParseValueAndAssignSubcomponentsByFallbackMethod();
   }
 }
