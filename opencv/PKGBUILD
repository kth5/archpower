# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>
# Maintainer: Antonio Rojas <arojas@archlinux.org>
# Contributor: Ray Rashif <schiv@archlinux.org>
# Contributor: Tobias Powalowski <tpowa@archlinux.org>

pkgbase=opencv
pkgname=(opencv
         opencv-samples
         python-opencv
)
case "${CARCH}" in
  x86_64) pkgname+=(opencv-cuda python-opencv-cuda) ;;
esac
pkgver=4.11.0
pkgrel=7
pkgdesc='Open Source Computer Vision Library'
arch=(x86_64 powerpc64le powerpc64 powerpc riscv64 espresso)
license=(Apache-2.0)
url='https://opencv.org/'
depends=(abseil-cpp
         cblas
         ffmpeg
         freetype2
         gcc-libs
         glib2
         glibc
         gst-plugins-base
         gst-plugins-base-libs
         gstreamer
         harfbuzz
         lapack
         libdc1394
         libglvnd
         libjpeg-turbo
         libpng
         libtiff
         libwebp
         openexr
         openjpeg2
         verdict
         protobuf
         onetbb
         zlib)
makedepends=(ant
             cmake
             eigen
             fmt
             git
             glew
             hdf5
             java-environment
             lapacke
             mesa
             nlohmann-json
             openmpi
             pugixml
             python-numpy
             python-setuptools
             qt6-5compat)
makedepends_powerpc64=(vtk)
makedepends_powerpc64le=(vtk)
makedepends_riscv64=(vtk)
makedepends_x86_64=(
             cuda
             cudnn
             gcc13
             vtk
)
optdepends=('opencv-samples: samples'
            'glew: for the viz module'
            'qt6-base: for the HighGUI module'
            'hdf5: for the HDF5 module'
            'opencl-icd-loader: For coding with OpenCL'
            'java-runtime: Java interface')
optdepends_powerpc64=('vtk: for the viz module')
optdepends_powerpc64le=('vtk: for the viz module')
optdepends_riscv64=('vtk: for the viz module')
optdepends_x86_64=('vtk: for the viz module')

source=(git+https://github.com/opencv/opencv#tag=$pkgver
        git+https://github.com/opencv/opencv_contrib#tag=$pkgver
        vtk9.patch
        "${pkgname}-${pkgver}-cmake4.patch::https://patch-diff.githubusercontent.com/raw/opencv/opencv/pull/27192.patch"
        0001-core-fixed-VSX-intrinsics-implementation.patch)
sha256sums=('92142ded037fd61afc092ccd29a39bf1fa38bfd8e96c78e1c0abbfe60d2ddb08'
            '8b6f8ea7dfcf5ae4cc95bb4fb68e25cbe912fc28bf681552ddd13d7afee5d5d9'
            'f35a2d4ea0d6212c7798659e59eda2cb0b5bc858360f7ce9c696c77d3029668e'
            'c9ac48cbcde10146af6fd9ca22d05091d5a3a35943a723bdcf4d30d51bfbf4a4'
            '684fa69ef2bca52179081be643552c74e5e8eae8c418489c3c391d2264f97852')
options=(!lto) # https://gitlab.archlinux.org/archlinux/packaging/packages/kdenlive/-/issues/8

prepare() {
  pushd opencv
  patch -p1 < ../vtk9.patch # Don't require all vtk optdepends
  patch -p1 < ../${pkgname}-${pkgver}-cmake4.patch
  patch -p1 < ../0001-core-fixed-VSX-intrinsics-implementation.patch
  popd

  pushd opencv_contrib
}

build() {
  export LDFLAGS+=' -lverdict'
  case "${CARCH}" in
    powerpc) export CXXFLAGS+=' -latomic' ;;
    powerpc64)
      export CFLAGS='-O2 -pipe'
      export CXXFLAGS='-O2 -pipe'
    ;;
  esac

  export JAVA_HOME="/usr/lib/jvm/default"
  # cmake's FindLAPACK doesn't add cblas to LAPACK_LIBRARIES, so we need to specify them manually
  _opts="-DWITH_OPENCL=ON \
         -DWITH_OPENGL=ON \
         -DOpenGL_GL_PREFERENCE=LEGACY \
         -DCMAKE_CXX_STANDARD=17 \
         -DWITH_TBB=ON \
         -DWITH_VULKAN=ON \
         -DWITH_QT=ON \
         -DBUILD_TESTS=OFF \
         -DBUILD_PERF_TESTS=OFF \
         -DBUILD_EXAMPLES=ON \
         -DBUILD_PROTOBUF=OFF \
         -DPROTOBUF_UPDATE_FILES=ON \
         -DINSTALL_C_EXAMPLES=ON \
         -DINSTALL_PYTHON_EXAMPLES=ON \
         -DCMAKE_INSTALL_PREFIX=/usr \
         -DOPENCV_EXTRA_MODULES_PATH=$srcdir/opencv_contrib/modules \
         -DOPENCV_SKIP_PYTHON_LOADER=ON \
         -DLAPACK_LIBRARIES=/usr/lib/liblapack.so;/usr/lib/libblas.so;/usr/lib/libcblas.so \
         -DLAPACK_CBLAS_H=/usr/include/cblas.h \
         -DLAPACK_LAPACKE_H=/usr/include/lapacke.h \
         -DOPENCV_GENERATE_PKGCONFIG=ON \
         -DOPENCV_ENABLE_NONFREE=ON \
         -DOPENCV_JNI_INSTALL_PATH=lib \
         -DOPENCV_GENERATE_SETUPVARS=OFF \
         -DEIGEN_INCLUDE_PATH=/usr/include/eigen3 \
         -DCMAKE_FIND_PACKAGE_PREFER_CONFIG=ON \
         -Dprotobuf_MODULE_COMPATIBLE=ON
         -DCPU_BASELINE_DISABLE=SSE3
         -DCPU_BASELINE_DISABLE=SSE2"

  #case "${CARCH}" in
  #  powerpc64le) _opts+=(-DHAVE_CXX_MCPU_POWER9_MTUNE_POWER9=OFF -DCV_ENABLE_INTRINSICS=OFF) ;;
  #esac

  cmake -B build -S $pkgname $_opts \
    -DBUILD_WITH_DEBUG_INFO=ON
  cmake --build build

  case "${CARCH}" in
    x86_64)
      CFLAGS="${CFLAGS} -fno-lto" CXXFLAGS="${CXXFLAGS} -fno-lto" LDFLAGS="${LDFLAGS} -fno-lto" \
      cmake -B build-cuda -S $pkgname $_opts \
        -DBUILD_WITH_DEBUG_INFO=OFF \
        -DWITH_CUDA=ON \
        -DWITH_CUDNN=ON \
        -DCMAKE_C_COMPILER=gcc-13 \
        -DCMAKE_CXX_COMPILER=g++-13 \
        -DCUDA_NVCC_FLAGS="--threads 0" \
        -DCUDA_ARCH_BIN='52-real;53-real;60-real;61-real;62-real;70-real;72-real;75-real;80-real;86-real;87-real;89-real;90-real;90-virtual' \
        -DCUDA_ARCH_PTX='90-virtual'
      cmake --build build-cuda
    ;;
  esac
}

package_opencv() {
  DESTDIR="$pkgdir" cmake --install build

  # separate samples package
  mv "$pkgdir"/usr/share/opencv4/samples "$srcdir"

  # Add java symlinks expected by some binary blobs
  ln -sr "$pkgdir"/usr/share/java/{opencv4/opencv-${pkgver//./},opencv}.jar
  ln -sr "$pkgdir"/usr/lib/{libopencv_java${pkgver//./},libopencv_java}.so

  # Split Python bindings
  rm -r "$pkgdir"/usr/lib/python3*
}

package_opencv-samples() {
  pkgdesc+=' (samples)'
  depends=(opencv)
  unset optdepends

  mkdir -p "$pkgdir"/usr/share/opencv4
  mv samples "$pkgdir"/usr/share/opencv4
}

package_python-opencv() {
  pkgdesc='Python bindings for OpenCV'
  depends=(fmt
           glew
           hdf5
           jsoncpp
           opencv
           openmpi
           pugixml
           python-numpy
           qt6-base
           vtk)
  unset optdepends

  DESTDIR="$pkgdir" cmake --install build/modules/python3
}

package_opencv-cuda() {
  pkgdesc+=' (with CUDA support)'
  depends+=(cudnn)
  conflicts=(opencv)
  provides=(opencv=$pkgver)
  options=(!debug)

  DESTDIR="$pkgdir" cmake --install build-cuda

  # Split samples
  rm -r "$pkgdir"/usr/share/opencv4/samples

  # Add java symlinks expected by some binary blobs
  ln -sr "$pkgdir"/usr/share/java/{opencv4/opencv-${pkgver//./},opencv}.jar
  ln -sr "$pkgdir"/usr/lib/{libopencv_java${pkgver//./},libopencv_java}.so

  # Split Python bindings
  rm -r "$pkgdir"/usr/lib/python3*
}

package_python-opencv-cuda() {
  pkgdesc='Python bindings for OpenCV (with CUDA support)'
  depends=(fmt
           glew
           hdf5
           jsoncpp
           opencv-cuda
           openmpi
           pugixml
           python-numpy
           qt6-base
           vtk)
  conflicts=(python-opencv)
  provides=(python-opencv=$pkgver)
  unset optdepends

  DESTDIR="$pkgdir" cmake --install build-cuda/modules/python3
}
