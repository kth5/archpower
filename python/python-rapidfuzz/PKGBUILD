# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>
# Maintainer: George Rawlinson
# Contributor: Pekka Ristola <pekkarr [at] protonmail [dot] com>
# Contributor: Caltlgin Stsodaat <contact@fossdaily.xyz>

pkgname=python-rapidfuzz
pkgver=3.14.0
pkgrel=1
pkgdesc='Rapid fuzzy string matching in Python using various string metrics'
arch=(x86_64 powerpc64le powerpc64 powerpc espresso)
url='https://github.com/rapidfuzz/RapidFuzz'
license=(MIT)
depends=(
  glibc
  gcc-libs
  python
)
makedepends=(
  git
  python-build
  python-installer
  cython
  python-scikit-build-core
  rapidfuzz-cpp
)
checkdepends=(
  python-hypothesis
  python-pandas
  python-pytest
)
optdepends=(python-numpy)
source=(
  "$pkgname::git+$url#tag=v$pkgver"
  'github.com-taskflow-taskflow::git+https://github.com/taskflow/taskflow'
  remove-version-constraints.patch
)
sha512sums=('2a9bb93c1d6884fc21125f2734b8e571a72d543cbbe01dcd4383173c3e0a6a166bd46602865517b36ab3809b452b5db6f8bd4f4a888a87cf26451f759d33dc9b'
            'SKIP'
            'f046814e01eb5dcdacbbedcadaa456e03e81d9895dd7dd43098c70e35777962cc0d2b725732b14e63350b561f5e59f1af729632406458259f7039f849c63a5b9')
b2sums=('4ff34ae76dfb300170ebe73f8b6b5ac20bd2c827e553747626c8125d4a9758dcbadc53bee27fd2a4155b134abd9b7fb7246f89041ee075b481e791f556dcf95a'
        'SKIP'
        '7e0643be792d6fc3923170ed2c03613b80385c028bf0c3b81b597aae4d74c7821c5daa79705a009b7d28d4cb4a009db3cc7b4ddf941dab2b6f4627861650d23c')

prepare() {
  cd "$pkgname"

  # prepare git submodules
  git submodule init extern/taskflow
  git config submodule.extern/taskflow.url "$srcdir/github.com-taskflow-taskflow"
  git -c protocol.file.allow=always submodule update

  patch -p1 -i "$srcdir/remove-version-constraints.patch"
}

build() {
  cd "$pkgname"

  case "${CARCH}" in
    powerpc) ;;
    *) export RAPIDFUZZ_BUILD_EXTENSION=1 ;;
  esac

  python -m build --wheel --no-isolation
}

check() {
  case "${CARCH}" in
    powerpc) return 0 ;;
  esac

  cd "$pkgname"

  local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")

  # install to temporary directory
  python -m installer --destdir="$PWD/tmp_install" dist/*.whl

  PYTHONPATH="$PWD/tmp_install$site_packages" pytest -v

}

package() {
  cd "$pkgname"

  python -m installer --destdir="$pkgdir" dist/*.whl

  # documentation
  install -vDm644 -t "$pkgdir/usr/share/doc/$pkgname" README.md

  # license
  install -vDm644 -t "$pkgdir/usr/share/licenses/$pkgname" LICENSE
}
