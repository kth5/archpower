From cc5b938f7f9e3c536f4a60c35cdd2085b3933618 Mon Sep 17 00:00:00 2001
From: Eli Schwartz <eschwartz@archlinux.org>
Date: Mon, 27 Apr 2020 21:51:57 -0400
Subject: [PATCH] Fix completely broken dependencies.

poetry habitually engages in:
- dependency versions which are known to be too pessimistic
- multiple editions of dependencies per python version

The former all work just fine in reported use and should not be pinned; we
package versions in Arch which are "too new". This is what unittests are
for, anyway.

The latter tries to enforce minimum versions of dependencies, but pins
it twice, once with more relaxed pinning for older versions of python.
If an old version works, it works irrespective of the python version,
and you don't need to use minimum requirements as your mallet to force
people to upgrade to the latest version anyway.
https://github.com/dephell/dephell/issues/330
---
 pyproject.toml | 11 ++---------
 1 file changed, 2 insertions(+), 9 deletions(-)

diff --git a/pyproject.toml b/pyproject.toml
index 8c1f137..81ebc89 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -51,20 +51,13 @@ futures = { version = "^3.3.0", python = "~2.7" }
 glob2 = { version = "^0.6", python = "~2.7" }
 # functools32 is needed for Python 2.7
 functools32 = { version = "^3.2.3", python = "~2.7" }
-keyring = [
-    { version = "^18.0.1", python = "~2.7" },
-    { version = "^20.0.1", python = "~3.5" },
-    { version = "^21.2.0", python = "^3.6" }
-]
+keyring = "*"
 # Use subprocess32 for Python 2.7
 subprocess32 = { version = "^3.5", python = "~2.7" }
 importlib-metadata = {version = "^1.6.0", python = "<3.8"}
 
 [tool.poetry.dev-dependencies]
-pytest = [
-    {version = "^4.1", python = "<3.5"},
-    {version = "^5.4.3", python = ">=3.5"}
-]
+pytest = { version = ">=4.1" }
 pytest-cov = "^2.5"
 pytest-mock = "^1.9"
 pre-commit = { version = "^2.6", python = "^3.6.1" }
-- 
2.28.0

