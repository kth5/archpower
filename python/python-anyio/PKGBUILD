# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>
# Maintainer: Chih-Hsuan Yen <yan12125@archlinux.org>

pkgname=python-anyio
# https://github.com/agronholm/anyio/blob/master/docs/versionhistory.rst
pkgver=4.9.0
pkgrel=1
pkgdesc='High level compatibility layer for multiple asynchronous event loop implementations'
arch=(any)
url='https://github.com/agronholm/anyio'
license=(MIT)
depends=(python python-idna python-sniffio)
makedepends=(git python-build python-installer python-setuptools python-setuptools-scm python-wheel
             python-uvloop python-trio)
checkdepends=(python-pytest python-trustme python-hypothesis python-pytest-mock python-psutil
              python-truststore python-exceptiongroup)
optdepends=(
  'python-trio: trio backend'
  'python-outcome: trio backend'
  'python-uvloop: use uvloop for asyncio backend'
  'python-pytest: pytest plugin'
)
source=("git+https://github.com/agronholm/anyio.git#tag=$pkgver")
sha256sums=('9a5a9a12ad2a3e1487a2031f390f184d8c8e71a8d1dd7dbb0ceef4bfade4bcd9')

export SETUPTOOLS_SCM_PRETEND_VERSION=$pkgver

prepare() {
  cd anyio
  # cherry-pick a commit that makes blockbuster optional
  git cherry-pick -n 71081fbeb0576c9cbcbc69bab0a66e6a3d06e5ac
  # Remove "error" from pytest filterwarnings
  sed -i '/"error"/d' pyproject.toml
}

build() {
  cd anyio
  python -m build --wheel --no-isolation
}

check() {
  cd anyio
  # Install to a temporary root as the test suite requires the entry point for
  # its pytest plugin
  pyver=$(python -c "import sys; print('{}.{}'.format(*sys.version_info[:2]))")
  python -m installer --destdir="$PWD/tmp_install" dist/*.whl
  PYTHONPATH="$PWD/tmp_install/usr/lib/python$pyver/site-packages" pytest
}

package() {
  cd anyio
  python -m installer --destdir="$pkgdir" dist/*.whl
  install -Dm644 LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname
}
