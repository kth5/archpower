# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>
# Maintainer: Levente Polyak <anthraxx[at]archlinux[dot]org>
# Maintainer: Daniel M. Capella <polyzen@archlinux.org>
# Contributor: Jonas Witschel <diabonas@archlinux.org>
# Contributor: Philipp A. <flying-sheep@web.de>

# Check if new updates break python-engineio

_pkgname=aiohttp
pkgname=python-aiohttp
pkgver=3.10.11
pkgrel=1
pkgdesc='HTTP client/server for asyncio'
arch=(x86_64 powerpc64le powerpc64 riscv64)
url=https://aiohttp.readthedocs.io
license=(Apache-2.0)
depends=(
  python
  python-aiohappyeyeballs
  python-aiosignal
  python-attrs
  python-frozenlist
  python-multidict
  python-yarl
)
makedepends=(
  cython
  git
  npm
  python-build
  python-installer
  python-setuptools
  python-wheel
)
checkdepends=(
  gunicorn
  python-aiodns
  python-brotli
  python-freezegun
  python-proxy.py
  python-pytest
  python-pytest-mock
  python-pytest-xdist
  python-re-assert
  python-time-machine
  python-trustme
  python-uvloop
)
optdepends=(
  'gunicorn: to deploy using Gunicorn'
  'python-aiodns: for fast DNS resolving'
  'python-brotli: for Brotli transfer-encodings support'
)
source=(
  "$pkgname::git+https://github.com/aio-libs/aiohttp#tag=v$pkgver"
  git+https://github.com/nodejs/llhttp.git
)
b2sums=('510d512e9ac89ee28cb24ce0992986b5c0a88ad9757b9868f46aa1597bb8bd39a69bc4d9ba5d92319313d21fb398ab92bc0e11c73f407b4937310b0997ce2d70'
        'SKIP')

prepare() {
  cd $pkgname
  git submodule init
  git config submodule.vendor/llhttp.url ../llhttp
  git -c protocol.file.allow=always submodule update --recursive
  sed 's|.install-cython ||' -i Makefile

  # This test calls the Python interpreter, we need to make sure that the path
  # for the C extensions is correct there as well
  sed -i "s/import {import_path!s}/import sys; sys.path.insert(0, '{os.environ['PYTHONPATH']}'); &/" \
      tests/test_circular_imports.py

  # Remove coverage testing
  sed -i '/--cov=/d;/-p pytest_cov/d' setup.cfg
}

build() {
  cd $pkgname
  make generate-llhttp cythonize
  python -m build --wheel --no-isolation
}

check() {
  [ ! "${CARCH}" == 'x86_64' ] && return 0
  local pytest_args=(
  --ignore tests/autobahn/test_autobahn.py # Docker tests
  --ignore tests/test_benchmarks_client.py
  --ignore tests/test_benchmarks_client_request.py
  --ignore tests/test_benchmarks_client_ws.py
  --ignore tests/test_benchmarks_cookiejar.py
  --ignore tests/test_benchmarks_http_websocket.py
  --ignore tests/test_benchmarks_http_writer.py
  )
  local python_version=$(python -c 'import sys; print("".join(map(str, sys.version_info[:2])))')

  cd $pkgname
  PYTHONPATH=build/lib.linux-$CARCH-cpython-$python_version pytest "${pytest_args[@]}"
}

package() {
  cd $pkgname
  python -m installer --destdir="$pkgdir" dist/*.whl
}

# vim: ts=2 sw=2 et:
