From 3c99a2e44e022ab171d258f9cb6876302fd6bb7f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jakub=20Klinkovsk=C3=BD?=
 <1289205+lahwaacz@users.noreply.github.com>
Date: Sat, 24 May 2025 16:02:15 +0200
Subject: [PATCH] Fix Find* CMake modules

- allow finding header files in default paths - this is consistent with
  the logic for finding the library files
- replace undefined variables ${SNAPPY_LIB_NAME} and ${LZ4_LIB_NAME}
  with the actual names
---
 cmake_modules/FindGTest.cmake    | 1 -
 cmake_modules/FindLZ4.cmake      | 3 +--
 cmake_modules/FindProtobuf.cmake | 3 ---
 cmake_modules/FindSnappy.cmake   | 3 +--
 cmake_modules/FindZLIB.cmake     | 1 -
 cmake_modules/FindZSTD.cmake     | 1 -
 6 files changed, 2 insertions(+), 10 deletions(-)

diff --git a/cmake_modules/FindGTest.cmake b/cmake_modules/FindGTest.cmake
index ee40378a..7398ed45 100644
--- a/cmake_modules/FindGTest.cmake
+++ b/cmake_modules/FindGTest.cmake
@@ -32,7 +32,6 @@ file (TO_CMAKE_PATH "${GTEST_HOME}" _gtest_path )
 
 find_path (GTEST_INCLUDE_DIR gmock/gmock.h HINTS
   ${_gtest_path}
-  NO_DEFAULT_PATH
   PATH_SUFFIXES "include")
 
 find_library (GMOCK_LIBRARY NAMES gmock HINTS
diff --git a/cmake_modules/FindLZ4.cmake b/cmake_modules/FindLZ4.cmake
index 3b9cc7fb..09db140b 100644
--- a/cmake_modules/FindLZ4.cmake
+++ b/cmake_modules/FindLZ4.cmake
@@ -40,14 +40,13 @@ message (STATUS "LZ4_HOME: ${LZ4_HOME}")
 
 find_path (LZ4_INCLUDE_DIR lz4.h HINTS
   ${_lz4_path}
-  NO_DEFAULT_PATH
   PATH_SUFFIXES "include")
 
 find_library (LZ4_LIBRARY NAMES lz4 liblz4 HINTS
   ${_lz4_path}
   PATH_SUFFIXES "lib" "lib64")
 
-find_library (LZ4_STATIC_LIB NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}${LZ4_LIB_NAME}${CMAKE_STATIC_LIBRARY_SUFFIX} HINTS
+find_library (LZ4_STATIC_LIB NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}lz4${CMAKE_STATIC_LIBRARY_SUFFIX} HINTS
   ${_lz4_path}
   PATH_SUFFIXES "lib" "lib64")
 
diff --git a/cmake_modules/FindProtobuf.cmake b/cmake_modules/FindProtobuf.cmake
index ca91fb5a..2df328ec 100644
--- a/cmake_modules/FindProtobuf.cmake
+++ b/cmake_modules/FindProtobuf.cmake
@@ -96,12 +96,10 @@ if (Protobuf_FOUND)
 else()
     find_path (PROTOBUF_INCLUDE_DIR google/protobuf/io/zero_copy_stream.h HINTS
       ${_protobuf_path}
-      NO_DEFAULT_PATH
       PATH_SUFFIXES "include")
 
     find_path (PROTOBUF_INCLUDE_DIR google/protobuf/io/coded_stream.h HINTS
       ${_protobuf_path}
-      NO_DEFAULT_PATH
       PATH_SUFFIXES "include")
 
     find_library (PROTOBUF_LIBRARY NAMES protobuf libprotobuf HINTS
@@ -122,7 +120,6 @@ else()
 
     find_program(PROTOBUF_EXECUTABLE protoc HINTS
       ${_protobuf_path}
-      NO_DEFAULT_PATH
       PATH_SUFFIXES "bin")
 endif ()
 
diff --git a/cmake_modules/FindSnappy.cmake b/cmake_modules/FindSnappy.cmake
index 1ad99145..db7b06d7 100644
--- a/cmake_modules/FindSnappy.cmake
+++ b/cmake_modules/FindSnappy.cmake
@@ -44,14 +44,13 @@ message (STATUS "SNAPPY_HOME: ${SNAPPY_HOME}")
 
 find_path (SNAPPY_INCLUDE_DIR snappy.h HINTS
   ${_snappy_path}
-  NO_DEFAULT_PATH
   PATH_SUFFIXES "include")
 
 find_library (SNAPPY_LIBRARY NAMES snappy HINTS
   ${_snappy_path}
   PATH_SUFFIXES "lib" "lib64")
 
-find_library (SNAPPY_STATIC_LIB NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}${SNAPPY_LIB_NAME}${CMAKE_STATIC_LIBRARY_SUFFIX} HINTS
+find_library (SNAPPY_STATIC_LIB NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}snappy${CMAKE_STATIC_LIBRARY_SUFFIX} HINTS
   ${_snappy_path}
   PATH_SUFFIXES "lib" "lib64")
 
diff --git a/cmake_modules/FindZLIB.cmake b/cmake_modules/FindZLIB.cmake
index 374814a7..f0654ffa 100644
--- a/cmake_modules/FindZLIB.cmake
+++ b/cmake_modules/FindZLIB.cmake
@@ -40,7 +40,6 @@ message (STATUS "ZLIB_HOME: ${ZLIB_HOME}")
 
 find_path (ZLIB_INCLUDE_DIR zlib.h HINTS
   ${_zlib_path}
-  NO_DEFAULT_PATH
   PATH_SUFFIXES "include")
 
 if (NOT ZLIB_STATIC_LIB_NAME)
diff --git a/cmake_modules/FindZSTD.cmake b/cmake_modules/FindZSTD.cmake
index 58171945..0af87e19 100644
--- a/cmake_modules/FindZSTD.cmake
+++ b/cmake_modules/FindZSTD.cmake
@@ -40,7 +40,6 @@ message (STATUS "ZSTD_HOME: ${ZSTD_HOME}")
 
 find_path (ZSTD_INCLUDE_DIR zstd.h HINTS
         ${_zstd_path}
-        NO_DEFAULT_PATH
         PATH_SUFFIXES "include")
 
 find_library (ZSTD_LIBRARY NAMES zstd HINTS
-- 
2.49.0

