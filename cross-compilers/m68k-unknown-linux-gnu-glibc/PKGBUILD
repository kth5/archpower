# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>

_target=m68k-unknown-linux-gnu
pkgname=${_target}-glibc
pkgver=2.42+r17+gd7274d718e6f
_commit=d7274d718e6f3655eabe311d4eb70fabb5ffa7ef
pkgrel=1.1
pkgdesc="GNU C Library (${_target})"
arch=('any')
url="http://www.gnu.org/software/libc/"
license=(GPL LGPL)
depends=("${_target}-linux-api-headers>=6.16")
makedepends=("${_target}-gcc-stage2>=14.2.1" python git)
provides=("${_target}-glibc-headers=${pkgver}" "${_target}-eglibc")
conflicts=("${_target}-glibc-headers" "${_target}-eglibc")
replaces=("${_target}-glibc-headers")
options=(!buildflags !strip staticlibs)
source=(git+https://sourceware.org/git/glibc.git#commit=${_commit}
        sdt-config.h
        sdt.h
        reenable_DT_HASH.patch)
validpgpkeys=(7273542B39962DF7B299931416792B4EA25340F8 # Carlos O'Donell
              BC7C7372637EC10C57D7AA6579C43DFBF1CF2187) # Siddhesh Poyarekar
sha256sums=('dcdf8ec0805c69b0c98fa3f55c35debc15928d2e42962be070df1ef9669bdd12'
            'cdc234959c6fdb43f000d3bb7d1080b0103f4080f5e67bcfe8ae1aaf477812f0'
            '774061aff612a377714a509918a9e0e0aafce708b87d2d7e06b1bd1f6542fe70'
            'cf9fe494f7ec69752a63d1b0a9ad689aa620888ae9b902b6383a6fbc7c1726a7')

pkgver() {
  cd glibc
  git describe --abbrev=12 --tags | sed 's/[^-]*-//;s/[^-]*-/&r/;s/-/+/g'
}

prepare() {
  mkdir -p glibc-build

  [[ -d glibc-$pkgver ]] && ln -s glibc-$pkgver glibc
  cd glibc

  local i; for i in ${source[@]}; do
    case ${i%::*} in
      *.patch|*.diff)
        msg2 "Applying ${i}"
        patch -p1 -i "$srcdir/${i}"
        ;;
    esac
  done
}

build() {
  local _configure_flags=(
      --prefix=/usr
      --with-headers=/usr/${_target}/usr/include
      --enable-add-ons
      --enable-bind-now
      --enable-lock-elision
      --enable-kernel=4.4
      --disable-multi-arch
      --enable-stack-protector=strong
      --enable-systemtap
      --enable-stack-protector=strong
      --enable-stackguard-randomization
      --disable-profile
      --disable-werror
  )

  cd glibc-build

  echo "slibdir=/usr/lib" >> configparms
  echo "rtlddir=/usr/lib" >> configparms
  echo "sbindir=/usr/bin" >> configparms
  echo "rootsbindir=/usr/bin" >> configparms

  # remove fortify for building libraries
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}

  export BUILD_CC=gcc
  export CC=${_target}-gcc
  export CXX=${_target}-g++
  export AR=${_target}-ar
  export RANLIB=${_target}-ranlib
  export OBJCOPY=${_target}-objcopy
  export OBJDUMP=${_target}-objdump

  unset LD_LIBRARY_PATH

  "$srcdir/glibc/configure" \
      --libdir=/usr/lib \
      --libexecdir=/usr/lib \
      ${_configure_flags[@]} \
      --target=${_target} \
      --host=${_target} \
      --build=${_target}

  echo "build-programs=no" >> configparms
  make

  case "${CARCH}" in
    powerpc64) sed 's@RTLDLIST=.*@RTLDLIST="/usr/lib/ld64.so.2"@g' -i ${pkgdir}/usr/bin/ldd ;;
  esac
}

package() {
  cd glibc-build

  make install_root="$pkgdir/usr/$_target" install

  mkdir -p "$pkgdir/usr/$_target/usr"
  ln -s /usr/$_target/usr/lib "$pkgdir/usr/$_target/"

  # Remove unneeded for compilation files
  rm -rf "$pkgdir/usr/$_target/"{bin,sbin,etc,share,var}

  # Provide tracing probes to libstdc++ for exceptions, possibly for other
  # libraries too. Useful for gdb's catch command.
  install -Dm644 "${srcdir}"/sdt.h "${pkgdir}"/usr/${_target}/usr/include/sys/sdt.h
  install -Dm644 "${srcdir}"/sdt-config.h "${pkgdir}"/usr/${_target}/usr/include/sys/sdt-config.h
}
