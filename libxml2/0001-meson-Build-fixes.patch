From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "Jan Alexander Steffens (heftig)" <heftig@archlinux.org>
Date: Tue, 18 Feb 2025 20:21:01 +0100
Subject: [PATCH] meson: Build fixes

---
 CMakeLists.txt      |  3 ---
 meson.build         | 28 +++++++++++++++++++++-----
 python/Makefile.am  |  2 +-
 python/generator.py | 15 +++++++++-----
 python/meson.build  | 49 +++++++++++++++++++++++++++++++++++++++------
 5 files changed, 77 insertions(+), 20 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2af1e6f6d8c5..7a4ee1c8e220 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -543,9 +543,6 @@ if(LIBXML2_WITH_PYTHON)
         COMMAND
         ${Python_EXECUTABLE}
         ${CMAKE_CURRENT_SOURCE_DIR}/python/generator.py
-        ${CMAKE_CURRENT_SOURCE_DIR}/doc/libxml2-api.xml
-        ${CMAKE_CURRENT_SOURCE_DIR}/python/libxml2-python-api.xml
-        WORKING_DIRECTORY
         ${CMAKE_CURRENT_BINARY_DIR}
     )
     file(READ python/libxml.py LIBXML_PY)
diff --git a/meson.build b/meson.build
index f425f3270145..861c174bc0b0 100644
--- a/meson.build
+++ b/meson.build
@@ -25,7 +25,7 @@ dir_include = dir_prefix / get_option('includedir')
 dir_pkginclude = dir_include / meson.project_name()
 dir_lib = dir_prefix / get_option('libdir')
 dir_data = dir_prefix / get_option('datadir')
-dir_doc = dir_data / 'doc' / 'libxml2'
+dir_doc = dir_data / 'doc' / meson.project_name()
 dir_locale = dir_prefix / get_option('localedir')
 
 # host
@@ -316,6 +316,7 @@ xml_check_functions = [
     ['stat', 'sys/stat.h'],
     ['mmap', 'sys/mman.h'],
     ['munmap', 'sys/mman.h'],
+    ['getentropy', 'sys/random.h'],
 ]
 
 foreach function : xml_check_functions
@@ -430,7 +431,7 @@ if not get_option('minimum')
     endif
 endif
 
-want_thread_alloc = threads_dep.found()
+want_thread_alloc = want_thread_alloc and threads_dep.found()
 
 ### xmllint shell history
 xmllint_deps = []
@@ -560,7 +561,11 @@ int main()
     return 0;
 }
         '''
-        res = cc.compiles(ipv6_src, name: 'support for IPV6')
+        res = cc.compiles(
+            ipv6_src,
+            name: 'support for IPV6',
+            args: config_h.has('HAVE_NETDB_H') ? ['-DHAVE_NETDB_H=1'] : [],
+        )
         if res == true
             config_h.set10('SUPPORT_IP6', true)
         endif
@@ -598,11 +603,12 @@ else
 endif
 
 # icu
-icu_dep = dependency('icu-i18n', method: 'pkg-config', required: get_option('icu'))
+icu_dep = dependency('icu-i18n', required: get_option('icu'))
 if icu_dep.found()
     def_var = icu_dep.get_variable(pkgconfig: 'DEFS')
     config_dir += include_directories(def_var)
     xml_deps += icu_dep
+    xml_deps += dependency('icu-uc', required: true)
 endif
 
 subdir('include/libxml')
@@ -673,10 +679,21 @@ foreach file : xml_opt_src
     endif
 endforeach
 
+xml_lib_link_args = []
+
+if want_legacy and not sys_windows
+    symfile = files('libxml2.syms')[0]
+    xml_lib_link_args += cc.get_supported_link_arguments([
+        '-Wl,--undefined-version',
+        '-Wl,--version-script=@0@'.format(symfile.full_path()),
+    ])
+endif
+
 xml_lib = library(
     'xml2',
     files(xml_src),
     c_args: libxml2_cflags,
+    link_args: xml_lib_link_args,
     dependencies: xml_deps,
     include_directories: config_dir,
     install: true,
@@ -763,28 +780,29 @@ pkgmod.generate(
     description: 'libXML library version2.',
     filebase: 'libxml-2.0',
     name: 'libXML',
+    subdirs: meson.project_name(),
     variables: 'modules=' + dl_dep.found().to_string('1', '0'),
 )
 
 ## libxml2-config.cmake file
 
 config_cmake = configuration_data()
 config_cmake.set('LIBXML_MAJOR_VERSION', v_maj)
 config_cmake.set('LIBXML_MINOR_VERSION', v_min)
 config_cmake.set('LIBXML_MICRO_VERSION', v_mic)
 config_cmake.set('VERSION', meson.project_version())
 config_cmake.set('WITH_ICONV', iconv_dep.found().to_int().to_string())
 config_cmake.set('WITH_ICU', icu_dep.found().to_int().to_string())
 config_cmake.set('WITH_LZMA', lzma_dep.found().to_int().to_string())
 config_cmake.set('WITH_MODULES', dl_dep.found().to_int().to_string())
 config_cmake.set('WITH_THREADS', threads_dep.found().to_int().to_string())
 config_cmake.set('WITH_ZLIB', zlib_dep.found().to_int().to_string())
 config_cmake.set('XML_CFLAGS', xml_cflags)
 configure_file(
     input: 'libxml2-config.cmake.in',
     output: 'libxml2-config.cmake',
     configuration: config_cmake,
-    install_dir: dir_lib / 'cmake' / 'libxml2',
+    install_dir: dir_lib / 'cmake' / meson.project_name(),
 )
 
 install_data(files('libxml.m4'), install_dir: dir_data / 'aclocal')
diff --git a/python/Makefile.am b/python/Makefile.am
index c9f3efade5ba..76018a9ec52e 100644
--- a/python/Makefile.am
+++ b/python/Makefile.am
@@ -38,7 +38,7 @@ CLEANFILES = libxml2.py $(GENERATED)
 all-local: libxml2.py
 
 $(GENERATED): $(srcdir)/generator.py $(API_DESC)
-	$(PYTHON) $(srcdir)/generator.py $(srcdir)
+	$(PYTHON) $(srcdir)/generator.py $(builddir)
 
 # libxml.c #includes libxml2-export.c
 libxml.$(OBJEXT): libxml2-export.c
diff --git a/python/generator.py b/python/generator.py
index 149e0dfeb162..48dd5a32b6b1 100755
--- a/python/generator.py
+++ b/python/generator.py
@@ -13,9 +13,14 @@ import string
 if __name__ == "__main__":
     # launched as a script
     srcPref = os.path.dirname(sys.argv[0])
+    try:
+        dstPref = sys.argv[1]
+    except IndexError:
+        dstPref = os.getcwd()
 else:
     # imported
     srcPref = os.path.dirname(__file__)
+    dstPref = os.getcwd()
 
 #######################################################################
 #
@@ -695,11 +700,11 @@ def buildStubs():
     failed = 0
     skipped = 0
 
-    include = open("libxml2-py.h", "w")
+    include = open(os.path.join(dstPref, "libxml2-py.h"), "w")
     include.write("/* Generated */\n\n")
-    export = open("libxml2-export.c", "w")
+    export = open(os.path.join(dstPref, "libxml2-export.c"), "w")
     export.write("/* Generated */\n\n")
-    wrapper = open("libxml2-py.c", "w")
+    wrapper = open(os.path.join(dstPref, "libxml2-py.c"), "w")
     wrapper.write("/* Generated */\n\n")
     wrapper.write("#define PY_SSIZE_T_CLEAN\n")
     wrapper.write("#include <Python.h>\n")
@@ -1081,8 +1086,8 @@ def buildWrappers():
         info = (0, func, name, ret, args, file)
         function_classes['None'].append(info)
    
-    classes = open("libxml2class.py", "w")
-    txt = open("libxml2class.txt", "w")
+    classes = open(os.path.join(dstPref, "libxml2class.py"), "w")
+    txt = open(os.path.join(dstPref, "libxml2class.txt"), "w")
     txt.write("          Generated Classes for libxml2-python\n\n")
 
     txt.write("#\n# Global functions of the module\n#\n\n")
diff --git a/python/meson.build b/python/meson.build
index 633dc9227b45..f2377d11fbf8 100644
--- a/python/meson.build
+++ b/python/meson.build
@@ -3,20 +3,57 @@ pymod = import('python')
 py = pymod.find_installation('python3', required: false)
 
 if py.found() == true
-    r = run_command(py, 'generator.py', meson.current_source_dir(), check: true)
+    message('Installing python modules to', py.get_install_dir())
 
-    libxml2mod_src = ['libxml.c', 'libxml2-py.c', 'types.c']
+    pygenerated = custom_target(
+        'Python generated files',
+        input: files('generator.py'),
+        depend_files: files(
+            '..' / 'doc' / 'libxml2-api.xml',
+            'libxml2-python-api.xml',
+        ),
+        output: [
+            'libxml2-py.h',
+            'libxml2-export.c',
+            'libxml2-py.c',
+            'libxml2class.py',
+            'libxml2class.txt',
+        ],
+        command: [py, '@INPUT@', meson.current_build_dir()],
+    )
+    pygenerated_dep = declare_dependency(
+        sources : [pygenerated[0]],
+    )
 
-    message(py.get_install_dir())
+    libxml2_py = custom_target(
+        'libxml2.py',
+        input: [files('libxml.py'), pygenerated[3]],
+        output: 'libxml2.py',
+        command: [find_program('cat'), '@INPUT@'],
+        capture: true,
+        install: true,
+        install_dir: py.get_install_dir(),
+    )
+
+    libxml2mod_src = [
+        files('libxml.c', 'types.c'),
+        pygenerated[2],
+    ]
 
     py.extension_module(
         'libxml2mod',
-        files(libxml2mod_src),
-        dependencies: [py.dependency(), xml_dep],
-        include_directories: [config_dir],
+        libxml2mod_src,
+        dependencies: [
+            py.dependency(),
+            xml_dep,
+            pygenerated_dep,
+        ],
+        include_directories: [config_dir, '.'],
         install: true,
     )
 
+    py.install_sources(files('drv_libxml2.py'))
+
     setup_py = configuration_data()
     setup_py.set('prefix', get_option('prefix'))
     setup_py.set('LIBXML_VERSION', meson.project_version())
