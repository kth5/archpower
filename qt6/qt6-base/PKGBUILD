# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>
# Maintainer: Antonio Rojas <arojas@archlinux.org>
# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Contributor: Andrea Scarpino <andrea@archlinux.org>

pkgname=qt6-base
_qtver=6.3.1
pkgver=${_qtver/-/}
pkgrel=1
arch=(x86_64 powerpc64le powerpc riscv64)
url='https://www.qt.io'
license=(GPL3 LGPL3 FDL custom)
pkgdesc='A cross-platform application and UI framework'
depends=(libjpeg-turbo xcb-util-keysyms xcb-util-cursor libgl fontconfig xdg-utils
         shared-mime-info xcb-util-wm libxrender libxi sqlite mesa vulkan-headers
         tslib libinput libxkbcommon-x11 libproxy libcups double-conversion brotli md4c)
depends_x86_64=(libb2)
makedepends=(cmake ninja mariadb-libs unixodbc postgresql alsa-lib gst-plugins-base-libs
             gtk3 libpulse cups freetds xmlstarlet)
makedepends_x86_64=(libfbclient)
optdepends=('qt6-wayland: to run Qt6 applications in a Wayland session'
            'postgresql-libs: PostgreSQL driver'
            'mariadb-libs: MariaDB driver'
            'unixodbc: ODBC driver'
            'freetds: MS SQL driver'
            'gtk3: GTK platform plugin'
            'perl: for syncqt')
optdepends_x86_64=('libfbclient: Firebird/iBase driver')
groups=(qt6)
options=(debug)
_pkgfn="${pkgname/6-/}-everywhere-src-$_qtver"
source=(https://download.qt.io/official_releases/qt/${pkgver%.*}/$_qtver/submodules/$_pkgfn.tar.xz
        qmake-cflags.patch
        qmake-config.patch)
sha256sums=('0a64421d9c2469c2c48490a032ab91d547017c9cc171f3f8070bc31888f24e03'
            '5411edbe215c24b30448fac69bd0ba7c882f545e8cf05027b2b6e2227abc5e78'
            '4abc22150fa3e06b2fdcec32146abc9be4e316692aa4d5bd5aa53b4b726783fa')

prepare() {
  patch -d $_pkgfn -p1 < qmake-cflags.patch # Use system CFLAGS
  patch -d $_pkgfn -p1 < qmake-config.patch # Don't strip binaries with qmake and use -ltcg, cf. QTBUG-73834
}

build() {
  case "${CARCH}" in
    powerpc|riscv64) _cmake_options='-DCMAKE_CXX_FLAGS="-latomic" -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=OFF' ;;
    powerpc64le|x86_64) _cmake_options='-DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON' ;;
  esac

  cmake -B build -S $_pkgfn -G Ninja \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DINSTALL_BINDIR=lib/qt6/bin \
    -DINSTALL_PUBLICBINDIR=usr/bin \
    -DINSTALL_LIBEXECDIR=lib/qt6 \
    -DINSTALL_DOCDIR=share/doc/qt6 \
    -DINSTALL_ARCHDATADIR=lib/qt6 \
    -DINSTALL_DATADIR=share/qt6 \
    -DINSTALL_INCLUDEDIR=include/qt6 \
    -DINSTALL_MKSPECSDIR=lib/qt6/mkspecs \
    -DINSTALL_EXAMPLESDIR=share/doc/qt6/examples \
    -DQT_FEATURE_journald=ON \
    -DQT_FEATURE_openssl_linked=ON \
    -DQT_FEATURE_system_sqlite=ON \
    -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON ${_cmake_options[@]}
  cmake --build build
}

package() {
  depends+=(qt6-translations)
  DESTDIR="$pkgdir" cmake --install build

  install -Dm644 $_pkgfn/LICENSE* -t "$pkgdir"/usr/share/licenses/$pkgbase

# Install symlinks for user-facing tools
  cd "$pkgdir"
  mkdir usr/bin
  while read _line; do
    ln -s $_line
  done < "$srcdir"/build/user_facing_tool_links.txt
}
