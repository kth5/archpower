# --- T2-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/kexec-tools/hotfix-ppc64-elfv2.patch
# Copyright (C) 2024 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License version 2 as used by the T2 SDE.
# --- T2-COPYRIGHT-NOTE-END ---

--- kexec-tools-2.0.27/purgatory/arch/ppc64/Makefile.vanilla	2024-01-23 11:01:46.141986158 +0100
+++ kexec-tools-2.0.27/purgatory/arch/ppc64/Makefile	2024-01-23 11:04:26.115979780 +0100
@@ -14,8 +14,8 @@
 ppc64_PURGATORY_EXTRA_ASFLAGS += -m64
 ifeq ($(SUBARCH),BE)
 	ppc64_PURGATORY_EXTRA_LDFLAGS += -melf64ppc
-	ppc64_PURGATORY_EXTRA_CFLAGS += -mcall-aixdesc
-	ppc64_PURGATORY_EXTRA_ASFLAGS += -mcall-aixdesc
+	ppc64_PURGATORY_EXTRA_CFLAGS += #-mabi=elfv1 -mcall-aixdesc
+	ppc64_PURGATORY_EXTRA_ASFLAGS += #-mabi=elfv1 -mcall-aixdesc
 else
 	ppc64_PURGATORY_EXTRA_LDFLAGS += -melf64lppc
 	ppc64_PURGATORY_EXTRA_CFLAGS += -mlittle-endian
--- kexec-tools-2.0.29-rc1/kexec/arch/ppc64/kexec-elf-rel-ppc64.c.vanilla	2024-07-13 21:18:44.870188277 +0200
+++ kexec-tools-2.0.29-rc1/kexec/arch/ppc64/kexec-elf-rel-ppc64.c	2024-07-13 21:23:01.961548101 +0200
@@ -182,7 +182,7 @@
 	case R_PPC64_REL16_HA:
 		/* check that we are dealing with the addis 2,12 instruction */
 		if (((*(uint32_t*)location) & 0xffff0000) != 0x3c4c0000)
-			die("Unexpected instruction for  R_PPC64_REL16_HA");
+			printf("Unexpected instruction for R_PPC64_REL16_HA %lx\n", (*(uint32_t*)location) & 0xffff0000);
 		value += my_r2(ehdr);
 		/* replacing by lis 2 */
 		*(uint32_t *)location = 0x3c400000 + ((value >> 16) & 0xffff);
@@ -191,7 +191,7 @@
 	case R_PPC64_REL16_LO:
 		/* check that we are dealing with the addi 2,2 instruction */
 		if (((*(uint32_t*)location) & 0xffff0000) != 0x38420000)
-			die("Unexpected instruction for R_PPC64_REL16_LO");
+			printf("Unexpected instruction for R_PPC64_REL16_LOL %lx\n", (*(uint32_t*)location) & 0xffff0000);
 
 		value += my_r2(ehdr) - 4;
 		*(uint16_t *)location = value & 0xffff;
