# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>
# Maintainer: Levente Polyak <anthraxx[at]archlinux[dot]org>
# Maintainer: Frederik Schwan <freswa at archlinux dot org>
# Maintainer: Guillaume ALAUX <guillaume@archlinux.org>
# Contributor: Boyan Ding <stu_dby@126.com>

# zero builds take a while
apb_output_timeout=7200

pkgbase=java8-openjdk
pkgname=(
jre8-openjdk-headless
jre8-openjdk
jdk8-openjdk
openjdk8-src
openjdk8-doc
)

_majorver=8
_minorver=472
_updatever=08
pkgver=${_majorver}.${_minorver}.u${_updatever}
pkgrel=2
#arch=(x86_64 powerpc64le powerpc64 powerpc espresso)
arch=(powerpc espresso)
url='https://openjdk.java.net/'
license=('LicenseRef-Java')
makedepends=(
  alsa-lib
  bash
  ccache
  cpio
  fontconfig
  giflib
  git
  java-environment=8
  libcups
  libxrender
  libxtst
  unzip
  zip
)
optdepends=(
  'gvfs: open links e.g. hyperlinks'
)
options=(
  !lto
)
source=(
  https://github.com/openjdk/jdk${_majorver}u/archive/refs/tags/jdk${_majorver}u${_minorver}-b${_updatever}.tar.gz
  gcc11.patch
  gcc15.patch
  gcc15-uabs.patch
  openjdk-8.402_p06-0001-Fix-Wint-conversion.patch
  openjdk-8.402_p06-0002-Fix-Wincompatible-pointer-types.patch
  openjdk-8.402_p06-0003-Fix-negative-value-left-shift.patch
  openjdk-8.402_p06-0004-Fix-misc.-warnings.patch
  adlc-parser.patch
  bootstrap-with-8.patch
  disable-werror.patch
  ppc64-compiler-flags.patch
  ppc64el.patch
  t64-dlsyms.patch
  zero-architectures.patch
  javadoc-sort-enum-and-annotation-types.patch
  jdk-8334502-time_t.patch
  jdk-841269-filechooser.patch
  jdk-getAccessibleValue.patch
  jdk-target-arch-define.patch
  ld-symbolic-functions-default.patch
  libpcsclite-dlopen.patch
  multiple-pkcs11-library-init.patch
  nonreparenting-wm.patch
)
b2sums=('4ce86687b29882a3e1add166c9f31818e3253f58f198f17d076acda3b15523baec7c51540aefe14ca237191656472f841eeb09cb69e59548ebc4cd5a267c04ec'
        '9679e4dfb6027a87376081489c09810812d6849573afac4ea96abe3a3e00ca5b6af7d0ffb010c43b93cfa913f9e97fbb9f11e19fcc86a89b4548442671c32da1'
        '684048f564f4f4e4066f09fb3837c490a9447e4943c904c583b0a93df43b8b4726bbdebbec9a2e2c3d4359ae95f095286c69d7c4ec192abf9e2586d37ba13097'
        '1fb02f49f3f9d7d66a170b5dd0a555733221cae4dc4529e7bfb5266734e41c07605187327af93fe33f012316b778ef50092f4ad88af76f55dfe957133feb3edb'
        'bf40827358b66f4f74ed506daec28f90c2c36609e28bbdd1a1df289a7a7b6b837c58f4978fffd18e580e0d49a6caaba31e54c3fcfbc66a218203cc2e05ec595d'
        '6e8e008b6735262d9447605e60fbf0a5937068d5efbac014dad86910d55320cba048b88dd2a4436bcac407d1660137f94eab037b8b99453c9a5cf6721e22f4bc'
        '435c9609dee9f7eaa492a8d9206a8d6d2a655313e7647876ea513e2c3bc213047578cc2067bb1e894d2bbb06961ed3dc0663bb55ac527dcd28a62b6ad18acc96'
        '8da8de4830a45451c10fe67195ee2b40c1e6571306ea36d7a4e2ffbd124a5938a4b770289193e54a337bc8c2dbbc21ff56928947a4e897f9da90c69bef80f1cf'
        'e448c487b4497800ee0c0e1348efdd1d158c716303b8fc831ea8094f426b727c1320c0d0deeead817b1cfd22d249607940223accb90af90cd6f8352b223b1ba2'
        '55a35c16478ea1bd43467be2f2d1a4d05c59bf3f501e5a999d78420c57d3649f0b6ef8341d9099e85d2e174e1333f2149f5c42f7f51488cbd299af68b08f6d2e'
        'b70edbeac71dea998a7a0a955454c0fbc49be199aaee07889dce5df45db140a4aed36171b9ac81a92181be5da5094eefb866ecb9f5effc90da112715c1a4f419'
        'bea397cd009ca2f9b016b3ea8ca51454e23039639cb2a0e414520ab809cf3b82956f3b32db76a3214576c1192aedcde2228c1d89980f2955107de0fe26744b3d'
        'f193d3fb5e0997add3061b18662c5aea932830e10736ed1ceafee2f99ca0dd96191d29486a25d8d0dc479e4d8b014148a5390a25a8e4c20fb64a22e5da19b30a'
        'e1f9c65ff0c5d5b927219aab09b553e7cd035b195f94a06231d8026334174f9ae518442f01aca78305cc086598e336337bc9d8efca08f1147a21e73bb67a0e53'
        '54239f241acce201b382b26d12e88d179ad85d4e6d57b735470a6aee7dac94c73fb8f1386f71326542e30b196dffd5149dceec6862250fe5ca3d3de0741cd283'
        'db21589ccfc8d9c0293a6371669783e856528688bea19c86bb2d0fc2311aae3d11bb7faa6fc165be14d480a5b2c49cfd5c5729bbed79d204ce33d88abcdf75fe'
        '213f5c42549174e602f81ec81394296ca39165715e3576c0540dba0f31982af9d4707848b78b8f81a450d2622ee187c5bdf721e0a106607fb34782b68d2f5b3f'
        'd02c1f6375e740d105c6ef047c1314cce35df335ec3f35bb3ea73571c3fe114d626bcc8b7a93f766307d17ea1650c80022998e275f408669b38003763d967b4d'
        'e927f72beb99cc15d5aa3588848cc4bb75af5e907693d3caf64c761508bd9dee76cb0dfead8769ee3dad1e24dcab06296f9659ef7336ef0ab3fcec197a1e5501'
        '0bf7347b683b1d6fb19d5c2d4e74f0d3c66fa4088dabbb2dd9a1f1ee5cdc31a5ea9978280be1807b17f1433b2f7ccaca1406680b00d6f31d80a78f244e28886e'
        '6b7f07c55c0f1b748e6aec606cd2ac23044fbfc32406b43f6274e912d51a802449d081701f764a6d31756db9725debc26d6be800f180715311454e80b008d407'
        '2951edcd507b5375b7a4c20e74d0b9027606c6947c0ab5f79e715181757a8f82e1bbd86e22732d3558804ce85d9c39dd86f3db5c0b74f2d25d9039ed79517ff3'
        'bd9462f13ca0474a17c7bd2a04e16c4751abdd56bccfa4f33cbae16f62914f63190230ef86bfe68784199d5d18ea7cdfc9c9b2e002e928d8743e29fdf6946384'
        'a3b8495abbe1b404d3cb02f0e339dcc3002b85c1934e50db98447c723f23ec78cb4f6e167538f4684428eeec2e629b457d102b4924bea68bb75570dbb5f4d195')

case "${CARCH}" in
  'x86_64') _JARCH=amd64 ; _DOC_ARCH=x86_64 ;;
  'i686'  ) _JARCH=i386  ; _DOC_ARCH=x86    ;;
  'powerpc64le') _JARCH=ppc64le; _DOC_ARCH=ppc64le ;;
  'powerpc64') _JARCH=ppc64; _DOC_ARCH=ppc64 ;;
  'powerpc') _JARCH=ppc; _DOC_ARCH=ppc ;;
esac

case "${CARCH}" in
  powerpc) JVM_TYPE=zero ;;
  *) JVM_TYPE=server ;;
esac

_jdkname=openjdk8
_jvmdir=/usr/lib/jvm/java-8-openjdk
_prefix="jdk8u/image"
_imgdir="${_prefix}/jvm/openjdk-1.8.0_$(printf '%.2d' ${_minorver})"
_nonheadless=(
  bin/policytool
  lib/${_JARCH}/libjsound.so
  lib/${_JARCH}/libjsoundalsa.so
  lib/${_JARCH}/libsplashscreen.so
)

prepare() {
  cd jdk8u-jdk${_majorver}u${_minorver}-b${_updatever}

  # Fix build with C++17 (Fedora)
  patch -Np1 -i "${srcdir}"/gcc11.patch

  # Drive the above a bit further
  patch -Np0 -i "${srcdir}"/gcc15.patch

  # GCC >=15 defines uabs, rename outs
  patch -Np0 -i "${srcdir}"/gcc15-uabs.patch

  # default is 1.7?
  patch -Np1 -i "${srcdir}"/bootstrap-with-8.patch

  patch -Np1 -i "${srcdir}"/openjdk-8.402_p06-0001-Fix-Wint-conversion.patch 
  patch -Np1 -i "${srcdir}"/openjdk-8.402_p06-0002-Fix-Wincompatible-pointer-types.patch 
  patch -Np1 -i "${srcdir}"/openjdk-8.402_p06-0003-Fix-negative-value-left-shift.patch 
  patch -Np1 -i "${srcdir}"/openjdk-8.402_p06-0004-Fix-misc.-warnings.patch

  patch -Np1 -i "${srcdir}"/adlc-parser.patch
  patch -Np1 -i "${srcdir}"/disable-werror.patch
  patch -Np1 -i "${srcdir}"/ppc64-compiler-flags.patch
  patch -Np1 -i "${srcdir}"/ppc64el.patch
  patch -Np1 -i "${srcdir}"/t64-dlsyms.patch
  patch -Np1 -i "${srcdir}"/zero-architectures.patch
  patch -Np1 -i "${srcdir}"/javadoc-sort-enum-and-annotation-types.patch
  patch -Np1 -i "${srcdir}"/jdk-8334502-time_t.patch
  patch -Np1 -i "${srcdir}"/jdk-841269-filechooser.patch
  patch -Np1 -i "${srcdir}"/jdk-getAccessibleValue.patch
  patch -Np1 -i "${srcdir}"/jdk-target-arch-define.patch
  patch -Np1 -i "${srcdir}"/ld-symbolic-functions-default.patch
  patch -Np1 -i "${srcdir}"/libpcsclite-dlopen.patch
  patch -Np1 -i "${srcdir}"/multiple-pkcs11-library-init.patch
  patch -Np1 -i "${srcdir}"/nonreparenting-wm.patch
}

build() {
  cd jdk8u-jdk${_majorver}u${_minorver}-b${_updatever}

  unset JAVA_HOME

  # remove -j from MAKEFLAGS to prevent build fail
  local MAKEFLAG_J=$(echo ${MAKEFLAGS} | sed -En 's/.*-j([0-9]+).*/\1/p')
  export MAKEFLAGS=${MAKEFLAGS/-j${MAKEFLAG_J}/}

  case "${CARCH}" in
    powerpc) EXTRA_CONFIGURE_FLAGS="--with-jvm-variants=zero" ;;
  esac

  # Avoid optimization of HotSpot being lowered from O3 to O2
  # -fno-exceptions for FS#73134
  export CFLAGS="${CFLAGS//-O2/-O3} -Wno-error=nonnull -Wno-error=deprecated-declarations -Wno-error=stringop-overflow= -Wno-error=return-type -Wno-error=cpp -fno-lifetime-dse -fno-delete-null-pointer-checks -fcommon -fno-exceptions -Wno-error=format-overflow= -Wno-error=int-conversion -Wno-error=incompatible-pointer-types"
  export CXXFLAGS="${CXXFLAGS} -fcommon -fno-exceptions"

  install -d -m 755 "${srcdir}/${_prefix}/"
  bash configure \
    --prefix="${srcdir}/${_prefix}" \
    --with-update-version="${_minorver}" \
    --with-build-number="b${_updatever}" \
    --with-milestone="fcs" \
    --enable-unlimited-crypto \
    --with-giflib=system \
    --with-zlib=system \
    --with-extra-cflags="${CFLAGS} -std=c99" \
    --with-extra-cxxflags="${CXXFLAGS} -std=c++98" \
    --with-extra-ldflags="${LDFLAGS}" \
    --with-vendor-name="Arch POWER" ${EXTRA_CONFIGURE_FLAGS}

  # These help to debug builds: LOG=trace HOTSPOT_BUILD_JOBS=1
  # Without 'DEBUG_BINARIES', i686 won't build: http://mail.openjdk.java.net/pipermail/core-libs-dev/2013-July/019203.html
  make
  make docs

  # FIXME sadly 'DESTDIR' is not used here!
  make install

  cd ../${_imgdir}

  # A lot of build stuff were directly taken from
  # http://pkgs.fedoraproject.org/cgit/java-1.8.0-openjdk.git/tree/java-1.8.0-openjdk.spec

  # http://icedtea.classpath.org/bugzilla/show_bug.cgi?id=1437
  find . -iname '*.jar' -exec chmod ugo+r {} \;
  chmod ugo+r lib/ct.sym

  # remove redundant *diz and *debuginfo files
  find . -iname '*.diz' -exec rm {} \;
  find . -iname '*.debuginfo' -exec rm {} \;
}

check() {
  cd jdk8u-jdk${_majorver}u${_minorver}-b${_updatever}
  #make -k test
}

package_jre8-openjdk-headless() {
  pkgdesc='OpenJDK Java 8 headless runtime environment'
  depends=(
    java-runtime-common
    ca-certificates-utils
    nss
  )
  optdepends=(
    'java-rhino: for some JavaScript support'
  )
  provides=(
    'java-runtime-headless=8'
    'java-runtime-headless-openjdk=8'
  )
  # Upstream config files that should go to etc and get backup
  _backup_etc=(
    etc/java-8-openjdk/${_JARCH}/jvm.cfg
    etc/java-8-openjdk/calendars.properties
    etc/java-8-openjdk/content-types.properties
    etc/java-8-openjdk/flavormap.properties
    etc/java-8-openjdk/images/cursors/cursors.properties
    etc/java-8-openjdk/logging.properties
    etc/java-8-openjdk/management/jmxremote.access
    etc/java-8-openjdk/management/jmxremote.password
    etc/java-8-openjdk/management/management.properties
    etc/java-8-openjdk/management/snmp.acl
    etc/java-8-openjdk/net.properties
    etc/java-8-openjdk/psfont.properties.ja
    etc/java-8-openjdk/psfontj2d.properties
    etc/java-8-openjdk/security/java.policy
    etc/java-8-openjdk/security/java.security
    etc/java-8-openjdk/sound.properties
  )
  replaces=(
    'jre8-openjdk-headless-wm'
  )
  backup=(
    ${_backup_etc[@]}
  )
  install=install_jre8-openjdk-headless.sh

  cd ${_imgdir}/jre

  install -d -m 755 "${pkgdir}${_jvmdir}/jre/"
  cp -a bin lib "${pkgdir}${_jvmdir}/jre"

  cp ../release "${pkgdir}${_jvmdir}" # FS#52692

  # Set config files
  mv "${pkgdir}${_jvmdir}"/jre/lib/management/jmxremote.password{.template,}
  mv "${pkgdir}${_jvmdir}"/jre/lib/management/snmp.acl{.template,}

  # Remove 'non-headless' lib files
  for f in "${_nonheadless[@]}"; do
    rm "${pkgdir}${_jvmdir}/jre/${f}"
  done

  # Man pages
  pushd "${pkgdir}${_jvmdir}/jre/bin"
  install -d -m 755 "${pkgdir}"/usr/share/man/{,ja/}man1/
  for file in *; do
    if [ -f "${srcdir}/${_imgdir}/man/man1/${file}.1" ]; then
      install -m 644 "${srcdir}/${_imgdir}/man/man1/${file}.1" \
        "${pkgdir}/usr/share/man/man1/${file}-${_jdkname}.1"
    fi
    if [ -f "${srcdir}/${_imgdir}/man/ja/man1/${file}.1" ]; then
      install -m 644 "${srcdir}/${_imgdir}/man/ja/man1/${file}.1" \
        "${pkgdir}/usr/share/man/ja/man1/${file}-${_jdkname}.1"
    fi
  done
  popd

  # Link JKS keystore from ca-certificates-utils
  rm -f "${pkgdir}${_jvmdir}/jre/lib/security/cacerts"
  ln -sf /etc/ssl/certs/java/cacerts "${pkgdir}${_jvmdir}/jre/lib/security/cacerts"

  # Install license
  install -d -m 755 "${pkgdir}/usr/share/licenses/${pkgbase}/"
  install -m 644 ASSEMBLY_EXCEPTION LICENSE THIRD_PARTY_README \
                 "${pkgdir}/usr/share/licenses/${pkgbase}"
  ln -sf /usr/share/licenses/${pkgbase} "${pkgdir}/usr/share/licenses/${pkgname}"

  # Move config files that were set in _backup_etc from ./lib to /etc
  for file in "${_backup_etc[@]}"; do
    _filepkgpath=${_jvmdir}/jre/lib/${file#etc/java-8-openjdk/}
    install -D -m 644 "${pkgdir}${_filepkgpath}" "${pkgdir}/${file}"
    ln -sf /${file} "${pkgdir}${_filepkgpath}"
  done
}

package_jre8-openjdk() {
  pkgdesc='OpenJDK Java 8 full runtime environment'
  depends=(
    "jre8-openjdk-headless=${pkgver}-${pkgrel}"
    giflib
    hicolor-icon-theme
    xdg-utils
  )
  optdepends=(
    'icedtea-web: web browser plugin + Java Web Start'
    'alsa-lib: for basic sound support'
    'gtk3: for the Gtk+ look and feel - desktop usage'
    'java8-openjfx: for JavaFX GUI components support'
  )
  provides=(
    'java-runtime=8'
    'java-runtime-openjdk=8'
  )
  install=install_jre8-openjdk.sh
  replaces=(
    jre8-openjdk-wm
  )

  cd ${_imgdir}/jre

  for f in "${_nonheadless[@]}"; do
    install -D ${f} "${pkgdir}${_jvmdir}/jre/${f}"
  done

  # Man pages
  pushd "${pkgdir}${_jvmdir}/jre/bin"
  install -d -m 755 "${pkgdir}"/usr/share/man/{,ja/}man1/
  for file in *; do
    install -m 644 "${srcdir}/${_imgdir}/man/man1/${file}.1" \
      "${pkgdir}/usr/share/man/man1/${file}-${_jdkname}.1"
    install -m 644 "${srcdir}/${_imgdir}/man/ja/man1/${file}.1" \
      "${pkgdir}/usr/share/man/ja/man1/${file}-${_jdkname}.1"
  done
  popd

  # Install license
  install -d -m 755 "${pkgdir}/usr/share/licenses/${pkgbase}/"
  ln -sf /usr/share/licenses/${pkgbase} "${pkgdir}/usr/share/licenses/${pkgname}"
}

package_jdk8-openjdk() {
  pkgdesc='OpenJDK Java 8 development kit'
  depends=(
    "jre8-openjdk=${pkgver}-${pkgrel}"
    java-environment-common
  )
  provides=(
    'java-environment=8'
    'java-environment-openjdk=8'
  )
  replaces=(
    'jdk8-openjdk-wm'
  )
  install=install_jdk8-openjdk.sh

  cd ${_imgdir}

  # Main files
  install -d -m 755 "${pkgdir}${_jvmdir}"

  cp -a include lib "${pkgdir}${_jvmdir}"

  # 'bin' files
  pushd bin

  # 'java-rmi.cgi' will be handled separately as it should not be in the PATH and has no man page
  for b in $(ls | grep -v java-rmi.cgi); do
    if [ -e ../jre/bin/${b} ]; then
      # Provide a link of the jre binary in the jdk/bin/ directory
      ln -s ../jre/bin/${b} "${pkgdir}${_jvmdir}/bin/${b}"
    else
      # Copy binary to jdk/bin/
      install -D -m 755 ${b} "${pkgdir}${_jvmdir}/bin/${b}"
      # Copy man page
      if [ -f ../man/man1/${b}.1 ]; then
        install -D -m 644 ../man/man1/${b}.1 "${pkgdir}/usr/share/man/man1/${b}-${_jdkname}.1"
      fi
      if [ -f ../man/ja/man1/${b}.1 ]; then
        install -D -m 644 ../man/ja/man1/${b}.1 "${pkgdir}/usr/share/man/ja/man1/${b}-${_jdkname}.1"
      fi
    fi
  done
  popd

  # Handling 'java-rmi.cgi' separately
  install -D -m 755 bin/java-rmi.cgi "${pkgdir}${_jvmdir}/bin/java-rmi.cgi"

  # link license
  install -d -m 755 "${pkgdir}/usr/share/licenses/"
  ln -sf /usr/share/licenses/${pkgbase} "${pkgdir}/usr/share/licenses/${pkgname}"
}

package_openjdk8-src() {
  pkgdesc='OpenJDK Java 8 sources'

  install -D "${srcdir}/${_imgdir}/src.zip" "${pkgdir}${_jvmdir}/src.zip"
}

package_openjdk8-doc() {
  pkgdesc='OpenJDK Java 8 documentation'

  install -d -m 755 "${pkgdir}/usr/share/doc/${pkgbase}/"
  cp -r "${srcdir}"/jdk8u-jdk${_majorver}u${_minorver}-b${_updatever}/build/linux-${_DOC_ARCH}-normal-${JVM_TYPE}-release/docs/* \
    "${pkgdir}/usr/share/doc/${pkgbase}/"
}

# vim: ts=2 sw=2 et:
