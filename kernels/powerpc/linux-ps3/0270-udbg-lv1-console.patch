diff -Naur a/arch/powerpc/Kconfig.debug b/arch/powerpc/Kconfig.debug
--- a/arch/powerpc/Kconfig.debug	2024-03-17 19:54:08.989827384 +0700
+++ b/arch/powerpc/Kconfig.debug	2024-03-17 19:54:11.754770140 +0700
@@ -275,6 +275,14 @@
 	  Select this to enable early debugging for the PlayStation3 via
 	  UDP broadcasts sent out through the Ethernet port.
 
+config PPC_EARLY_DEBUG_PS3_LV1_CONS
+	bool "Early debugging through the PS3 LV1 console"
+	depends on PPC_PS3
+	select PS3_LV1_CONS_UDBG
+	help
+	  Select this to enable early debugging for the PlayStation3 via
+	  LV1 debug console.
+
 config PPC_EARLY_DEBUG_OPAL_RAW
 	bool "OPAL raw console"
 	depends on HVC_OPAL
diff -Naur a/arch/powerpc/include/asm/udbg.h b/arch/powerpc/include/asm/udbg.h
--- a/arch/powerpc/include/asm/udbg.h	2024-03-17 19:54:09.017826804 +0700
+++ b/arch/powerpc/include/asm/udbg.h	2024-03-17 19:54:11.755770119 +0700
@@ -50,6 +50,7 @@
 void __init udbg_init_memcons(void);
 void __init udbg_init_ehv_bc(void);
 void __init udbg_init_ps3gelic(void);
+void __init udbg_init_ps3_lv1_cons(void);
 void __init udbg_init_debug_opal_raw(void);
 void __init udbg_init_debug_opal_hvsi(void);
 void __init udbg_init_debug_16550(void);
diff -Naur a/arch/powerpc/kernel/udbg.c b/arch/powerpc/kernel/udbg.c
--- a/arch/powerpc/kernel/udbg.c	2024-03-17 19:54:09.027826597 +0700
+++ b/arch/powerpc/kernel/udbg.c	2024-03-17 19:54:11.755770119 +0700
@@ -63,6 +63,8 @@
 	udbg_init_ehv_bc();
 #elif defined(CONFIG_PPC_EARLY_DEBUG_PS3GELIC)
 	udbg_init_ps3gelic();
+#elif defined(CONFIG_PPC_EARLY_DEBUG_PS3_LV1_CONS)
+	udbg_init_ps3_lv1_cons();
 #elif defined(CONFIG_PPC_EARLY_DEBUG_OPAL_RAW)
 	udbg_init_debug_opal_raw();
 #elif defined(CONFIG_PPC_EARLY_DEBUG_OPAL_HVSI)
diff -Naur a/arch/powerpc/platforms/ps3/Kconfig b/arch/powerpc/platforms/ps3/Kconfig
--- a/arch/powerpc/platforms/ps3/Kconfig	2024-03-17 19:54:09.051826100 +0700
+++ b/arch/powerpc/platforms/ps3/Kconfig	2024-03-17 19:54:11.755770119 +0700
@@ -242,4 +242,12 @@
 	  profiling support of the Cell processor with programs like
 	  perfmon2, then say Y or M, otherwise say N.
 
+config PS3_LV1_CONS_UDBG
+	bool "PS3 udbg output via LV1 console"
+	depends on PPC_PS3
+	help
+	  Enables udbg early debugging output to LV1 console.
+
+	  If in doubt, say N here.
+
 endmenu
diff -Naur a/arch/powerpc/platforms/ps3/Makefile b/arch/powerpc/platforms/ps3/Makefile
--- a/arch/powerpc/platforms/ps3/Makefile	2024-03-17 19:54:09.051826100 +0700
+++ b/arch/powerpc/platforms/ps3/Makefile	2024-03-17 19:54:11.755770119 +0700
@@ -4,6 +4,7 @@
 obj-y += system-bus.o
 
 obj-$(CONFIG_PPC_EARLY_DEBUG_PS3GELIC) += gelic_udbg.o
+obj-$(CONFIG_PS3_LV1_CONS_UDBG) += lv1_cons_udbg.o
 obj-$(CONFIG_SMP) += smp.o
 obj-$(CONFIG_SPU_BASE) += spu.o
 obj-y += device-init.o
diff -Naur a/arch/powerpc/platforms/ps3/lv1_cons_udbg.c b/arch/powerpc/platforms/ps3/lv1_cons_udbg.c
--- a/arch/powerpc/platforms/ps3/lv1_cons_udbg.c	1970-01-01 07:00:00.000000000 +0700
+++ b/arch/powerpc/platforms/ps3/lv1_cons_udbg.c	2024-03-17 19:54:11.756770099 +0700
@@ -0,0 +1,57 @@
+/*
+ * PS3 LV1 Debug Console
+ *
+ * Copyright (C) 2013 glevand <geoffrey.levand@mail.ru>
+ * All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published
+ * by the Free Software Foundation; version 2 of the License.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ */
+
+#include <asm/io.h>
+#include <asm/udbg.h>
+#include <asm/lv1call.h>
+
+#define LV1_CONS_ID		1
+#define LV1_CONS_LENGTH		0xff0
+
+static int initialized = 0;
+
+static void lv1_cons_udbg_putc(char ch)
+{
+	u64 data, written;
+	int ret;
+
+	if (!initialized) {
+		ret = lv1_undocumented_function_105(LV1_CONS_ID, 0, 0,
+			LV1_CONS_LENGTH, LV1_CONS_LENGTH, 0, 0);
+		if ((ret != 0) && (ret != -7))
+			return;
+
+		initialized = 1;
+	}
+
+	data = ch;
+	data <<= 56;
+
+	lv1_undocumented_function_107(LV1_CONS_ID, 1, data, 0, 0, 0, &written);
+
+	/* flush to console buffer in LV1 */
+
+	lv1_undocumented_function_109(LV1_CONS_ID);
+}
+
+void __init udbg_init_ps3_lv1_cons(void)
+{
+	udbg_putc = lv1_cons_udbg_putc;
+}
