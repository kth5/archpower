diff --git i/CMake/FLTK-Functions.cmake w/CMake/FLTK-Functions.cmake
index 2c29efe73..e9f925ca8 100644
--- i/CMake/FLTK-Functions.cmake
+++ w/CMake/FLTK-Functions.cmake
@@ -28,7 +28,7 @@ function (FLTK_RUN_FLUID TARGET SOURCES)
       string(REGEX REPLACE "(.*).fl" \\1 basename ${src})
       add_custom_command(
         OUTPUT "${basename}.cxx" "${basename}.h"
-        COMMAND fluid -c ${CMAKE_CURRENT_SOURCE_DIR}/${src}
+        COMMAND fluid1.3 -c ${CMAKE_CURRENT_SOURCE_DIR}/${src}
         DEPENDS ${src}
         MAIN_DEPENDENCY ${src}
       )
diff --git i/CMake/FLTKConfig.cmake.in w/CMake/FLTKConfig.cmake.in
index 22e165a8d..d3017838e 100644
--- i/CMake/FLTKConfig.cmake.in
+++ w/CMake/FLTKConfig.cmake.in
@@ -28,10 +28,10 @@
 
 set(FLTK_VERSION @FLTK_VERSION@)
 
-include(${CMAKE_CURRENT_LIST_DIR}/FLTK-Targets.cmake)
+include(${CMAKE_CURRENT_LIST_DIR}/FLTK1.3-Targets.cmake)
 
 set(FLTK_INCLUDE_DIRS "@INCLUDE_DIRS@")
-set(FLTK_USE_FILE ${CMAKE_CURRENT_LIST_DIR}/UseFLTK.cmake)
+set(FLTK_USE_FILE ${CMAKE_CURRENT_LIST_DIR}/UseFLTK1.3.cmake)
 
 # For compatibility with CMake's FindFLTK.cmake:
 
@@ -42,7 +42,7 @@ if(CMAKE_CROSSCOMPILING)
   # Find a fluid executable on the build host to be able to build fluid programs
 
   find_program(FLTK_FLUID_HOST
-    NAMES fluid fluid.exe
+    NAMES fluid1.3 fluid.exe
     PATHS ENV PATH
     NO_DEFAULT_PATH
     NO_CMAKE_FIND_ROOT_PATH
@@ -65,9 +65,11 @@ else(CMAKE_CROSSCOMPILING)
 
   # Use the target 'fluid' which is built together with the library.
 
-  set(FLTK_FLUID_EXECUTABLE fluid)
+  set(FLTK_FLUID_EXECUTABLE fluid1.3)
 
 endif(CMAKE_CROSSCOMPILING)
 
+set(FLTK_LIBRARIES fltk fltk_forms fltk_gl fltk_images X11 Xinerama OpenGL GLX Xext Xfixes Xcursor Xrender Xft jpeg png16 m fontconfig)
+
 # Debug: should be commented out
 # message(STATUS "FLTKConfig.cmake: FLTK_FLUID_EXECUTABLE = '${FLTK_FLUID_EXECUTABLE}'")
diff --git i/CMake/export.cmake w/CMake/export.cmake
index 6e8bc5dd6..3dcb0b610 100644
--- i/CMake/export.cmake
+++ w/CMake/export.cmake
@@ -34,8 +34,8 @@ if (CMAKE_CROSSCOMPILING)
   )
 else ()
   add_subdirectory(fluid)
-  set (FLTK_FLUID_EXECUTABLE fluid)
-  set (FLUID fluid) # export
+  set (FLTK_FLUID_EXECUTABLE fluid1.3)
+  set (FLUID fluid1.3) # export
 endif (CMAKE_CROSSCOMPILING)
 
 add_subdirectory(src)
@@ -46,7 +46,7 @@ export(TARGETS ${FLUID} ${FLTK_LIBRARIES} FILE ${CMAKE_CURRENT_BINARY_DIR}/FLTK-
 # generate FLTK-Functions.cmake for build directory use
 configure_file (
   ${CMAKE_CURRENT_SOURCE_DIR}/CMake/FLTK-Functions.cmake
-  ${CMAKE_CURRENT_BINARY_DIR}/FLTK-Functions.cmake
+  ${CMAKE_CURRENT_BINARY_DIR}/FLTK1.3-Functions.cmake
   COPYONLY
 )
 
@@ -56,14 +56,14 @@ set (CONFIG_PATH ${CMAKE_CURRENT_BINARY_DIR})
 
 configure_file(
   ${CMAKE_CURRENT_SOURCE_DIR}/CMake/FLTKConfig.cmake.in
-  ${CMAKE_CURRENT_BINARY_DIR}/FLTKConfig.cmake
+  ${CMAKE_CURRENT_BINARY_DIR}/FLTK1.3Config.cmake
   @ONLY
 )
 
 # generate UseFLTK.cmake for build directory use
 configure_file(
   ${CMAKE_CURRENT_SOURCE_DIR}/CMake/UseFLTK.cmake.in
-  ${CMAKE_CURRENT_BINARY_DIR}/UseFLTK.cmake
+  ${CMAKE_CURRENT_BINARY_DIR}/UseFLTK1.3.cmake
   @ONLY
 )
 
@@ -72,19 +72,19 @@ set (prefix ${CMAKE_CURRENT_BINARY_DIR})
 set (exec_prefix "\${prefix}")
 set (includedir "${CMAKE_CURRENT_SOURCE_DIR}")
 set (BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}")
-set (libdir "\${exec_prefix}/lib")
+set (libdir "\${exec_prefix}/lib/fltk1.3")
 set (srcdir ".")
 
 set (LIBNAME "${libdir}/libfltk.a")
 
 configure_file(
   "${CMAKE_CURRENT_SOURCE_DIR}/fltk-config.in"
-  "${CMAKE_CURRENT_BINARY_DIR}/fltk-config"
+  "${CMAKE_CURRENT_BINARY_DIR}/fltk-config1.3"
   @ONLY
 )
 
 if (UNIX)
-  execute_process(COMMAND chmod 755 fltk-config
+  execute_process(COMMAND chmod 755 fltk-config1.3
     WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}"
   )
 endif (UNIX)
diff --git i/CMake/install.cmake w/CMake/install.cmake
index bbba1255d..76ed4b54d 100644
--- i/CMake/install.cmake
+++ w/CMake/install.cmake
@@ -49,13 +49,13 @@ if (OPTION_CREATE_LINKS)
 endif (OPTION_CREATE_LINKS)
 
 # generate FLTKConfig.cmake for installed directory use
-set (INCLUDE_DIRS ${CMAKE_INSTALL_PREFIX}/include)
+set (INCLUDE_DIRS ${CMAKE_INSTALL_PREFIX}/include/fltk1.3)
 
 set (CONFIG_PATH ${CMAKE_INSTALL_PREFIX}/${FLTK_CONFIG_PATH})
 
 install (EXPORT FLTK-Targets
   DESTINATION ${FLTK_CONFIG_PATH}
-  FILE FLTK-Targets.cmake
+  FILE FLTK1.3-Targets.cmake
 )
 
 configure_file(
@@ -67,11 +67,13 @@ configure_file(
 install (FILES
   ${CMAKE_CURRENT_BINARY_DIR}/etc/FLTKConfig.cmake
   DESTINATION ${FLTK_CONFIG_PATH}
+  RENAME FLTK1.3Config.cmake
 )
 
 install (FILES
   ${CMAKE_CURRENT_SOURCE_DIR}/CMake/FLTK-Functions.cmake
   DESTINATION ${FLTK_CONFIG_PATH}
+  RENAME FLTK1.3-Functions.cmake
 )
 
 configure_file(
@@ -84,6 +86,7 @@ configure_file(
 install (FILES
   ${CMAKE_CURRENT_BINARY_DIR}/etc/UseFLTK.cmake
   DESTINATION ${FLTK_CONFIG_PATH}
+  RENAME UseFLTK1.3.cmake
 )
 
 # generate fltk-config
@@ -98,18 +101,18 @@ set (LIBNAME "${libdir}/libfltk.a")
 
 configure_file(
   "${CMAKE_CURRENT_SOURCE_DIR}/fltk-config.in"
-  "${CMAKE_CURRENT_BINARY_DIR}/bin/fltk-config"
+  "${CMAKE_CURRENT_BINARY_DIR}/bin/fltk-config1.3"
   @ONLY
 )
 
 if (UNIX)
-  execute_process (COMMAND chmod 755 fltk-config
+  execute_process (COMMAND chmod 755 fltk-config1.3
     WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/bin"
   )
 endif (UNIX)
 
 install (PROGRAMS
-  ${CMAKE_CURRENT_BINARY_DIR}/bin/fltk-config
+  ${CMAKE_CURRENT_BINARY_DIR}/bin/fltk-config1.3
   DESTINATION ${FLTK_BINDIR}
 )
 
@@ -122,11 +125,4 @@ if (UNIX OR MSYS OR (MINGW AND CMAKE_CROSSCOMPILING))
     )
   endmacro (INSTALL_MAN FILE LEVEL)
 
-  INSTALL_MAN (fluid 1)
-  INSTALL_MAN (fltk-config 1)
-  INSTALL_MAN (fltk 3)
-  INSTALL_MAN (blocks 6)
-  INSTALL_MAN (checkers 6)
-  INSTALL_MAN (sudoku 6)
-
 endif (UNIX OR MSYS OR (MINGW AND CMAKE_CROSSCOMPILING))
diff --git i/CMake/setup.cmake w/CMake/setup.cmake
index ea1a6ea16..f56a40ec4 100644
--- i/CMake/setup.cmake
+++ w/CMake/setup.cmake
@@ -62,7 +62,7 @@ if (WIN32 AND NOT CYGWIN)
 elseif (APPLE)
   set (FLTK_CONFIG_PATH FLTK.framework/Resources/CMake)
 else ()
-  set (FLTK_CONFIG_PATH ${FLTK_DATADIR}/fltk)
+  set (FLTK_CONFIG_PATH ${FLTK_DATADIR}/cmake/fltk1.3)
 endif (WIN32 AND NOT CYGWIN)
 
 include(TestBigEndian)
diff --git i/CMake/variables.cmake w/CMake/variables.cmake
index 0360d06d3..94e6cc3e3 100644
--- i/CMake/variables.cmake
+++ w/CMake/variables.cmake
@@ -72,6 +72,8 @@ endif (HAVE_DLSYM)
 
 if (WIN32)
   set (LDFLAGS "${CMAKE_EXE_LINKER_FLAGS} -mwindows")
+else ()
+  set (LDFLAGS "${CMAKE_EXE_LINKER_FLAGS} -L/usr/lib/fltk1.3")
 endif ()
 
 set (IMAGELIBS)
diff --git i/CMakeLists.txt w/CMakeLists.txt
index 0795918ae..3df8d2865 100644
--- i/CMakeLists.txt
+++ w/CMakeLists.txt
@@ -138,6 +138,7 @@ write_basic_package_version_file(FLTKConfigVersion.cmake
 install(FILES
   ${CMAKE_CURRENT_BINARY_DIR}/FLTKConfigVersion.cmake
   DESTINATION ${FLTK_CONFIG_PATH}
+  RENAME FLTK1.3ConfigVersion.cmake
 )
 
 #######################################################################
diff --git i/fltk-config.in w/fltk-config.in
index a33de790c..363795ae1 100644
--- i/fltk-config.in
+++ w/fltk-config.in
@@ -42,8 +42,8 @@ CXX="@CXX@"
 
 # flags for C++ compiler:
 ARCHFLAGS="@ARCHFLAGS@"
-CFLAGS="@CFLAGS@ @LARGEFILE@ @PTHREAD_FLAGS@"
-CXXFLAGS="@CXXFLAGS@ @LARGEFILE@ @PTHREAD_FLAGS@"
+CFLAGS=""
+CXXFLAGS=""
 LDFLAGS="@LDFLAGS@"
 LDLIBS="@LIBS@"
 OPTIM="@OPTIM@"
@@ -234,23 +234,23 @@ fi
 
 # Calculate needed libraries
 LDSTATIC="$libdir/libfltk.a $LDLIBS"
-LDLIBS="-lfltk$SHAREDSUFFIX $LDLIBS"
+LDLIBS="-lfltk$SHAREDSUFFIX"
 
 if test x$use_forms = xyes; then
-    LDLIBS="-lfltk_forms$SHAREDSUFFIX $LDLIBS"
+    LDLIBS="-lfltk_forms$SHAREDSUFFIX"
     LDSTATIC="$libdir/libfltk_forms.a $LDSTATIC"
 fi
 if test x$use_gl = xyes; then
-    LDLIBS="-lfltk_gl$SHAREDSUFFIX @GLLIBS@ $LDLIBS"
+    LDLIBS="-lfltk_gl$SHAREDSUFFIX @GLLIBS@"
     LDSTATIC="$libdir/libfltk_gl.a @GLLIBS@ $LDSTATIC"
 fi
 if test x$use_images = xyes; then
-    LDLIBS="-lfltk_images$SHAREDSUFFIX $IMAGELIBS $LDLIBS"
+    LDLIBS="-lfltk_images$SHAREDSUFFIX $IMAGELIBS"
     LDSTATIC="$libdir/libfltk_images.a $STATICIMAGELIBS $LDSTATIC"
 fi
 
 if test x$use_cairo = xyes; then
-    LDLIBS="-lfltk_cairo$SHAREDSUFFIX $CAIROLIBS $LDLIBS"
+    LDLIBS="-lfltk_cairo$SHAREDSUFFIX $CAIROLIBS"
     LDSTATIC="$libdir/libfltk_cairo.a $CAIROLIBS $LDSTATIC"
 fi
 
@@ -369,26 +369,26 @@ if test "$echo_ldstaticflags" = "yes"; then
 fi
 
 if test "$echo_libs" = "yes"; then
-    USELIBS="$libdir/libfltk.a"
+    USELIBS="$libdir/libfltk.so"
 
     if test x$use_forms = xyes; then
-        USELIBS="$libdir/libfltk_forms.a $USELIBS"
+        USELIBS="$libdir/libfltk_forms.so $USELIBS"
     fi
 
     if test x$use_gl = xyes; then
-        USELIBS="$libdir/libfltk_gl.a $USELIBS"
+        USELIBS="$libdir/libfltk_gl.so $USELIBS"
     fi
 
     if test x$use_cairo = xyes; then
-        USELIBS="$libdir/libfltk_cairo.a $USELIBS"
+        USELIBS="$libdir/libfltk_cairo.so $USELIBS"
     fi
 
     if test x$use_images = xyes; then
-        USELIBS="$libdir/libfltk_images.a $USELIBS"
+        USELIBS="$libdir/libfltk_images.so $USELIBS"
 
         for lib in fltk_jpeg fltk_png fltk_z; do
             if test -f $libdir/lib$lib.a; then
-                USELIBS="$libdir/lib$lib.a $USELIBS"
+                USELIBS="$libdir/lib$lib.so $USELIBS"
             fi
 	done
     fi
diff --git i/fluid/CMakeLists.txt w/fluid/CMakeLists.txt
index 472c84c20..09670c053 100644
--- i/fluid/CMakeLists.txt
+++ w/fluid/CMakeLists.txt
@@ -63,15 +63,15 @@ if (APPLE AND (NOT OPTION_APPLE_X11))
   unset (WRAPPER)
 
 else ()
-  add_executable (fluid WIN32 ${CPPFILES})
+  add_executable (fluid1.3 WIN32 ${CPPFILES})
 endif (APPLE AND (NOT OPTION_APPLE_X11))
 
-target_link_libraries (fluid fltk fltk_images fltk_forms)
+target_link_libraries (fluid1.3 fltk_SHARED fltk_images_SHARED fltk_forms_SHARED)
 if (FLTK_HAVE_CAIRO)
   if (CMAKE_VERSION VERSION_LESS "3.13")
     link_directories (${PKG_CAIRO_LIBRARY_DIRS})
   else()
-    target_link_directories (fluid PRIVATE ${PKG_CAIRO_LIBRARY_DIRS})
+    target_link_directories (fluid1.3 PRIVATE ${PKG_CAIRO_LIBRARY_DIRS})
   endif()
 endif (FLTK_HAVE_CAIRO)
 
@@ -85,7 +85,7 @@ if (APPLE AND (NOT OPTION_APPLE_X11))
   # install
   install (TARGETS fluid DESTINATION ${FLTK_BINDIR})
 else()
-  install (TARGETS fluid
+  install (TARGETS fluid1.3
     EXPORT FLTK-Targets
     RUNTIME DESTINATION ${FLTK_BINDIR}
     LIBRARY DESTINATION ${FLTK_LIBDIR}
@@ -98,17 +98,19 @@ endif (APPLE AND (NOT OPTION_APPLE_X11))
 if (UNIX)
   install (FILES fluid.desktop
     DESTINATION ${FLTK_DATADIR}/applications
+    RENAME fluid1.3.desktop
   )
   # Install mime-type file (x-fluid.desktop method is deprecated)
   install (FILES fluid.xml
     DESTINATION ${FLTK_DATADIR}/mime/packages
+    RENAME fluid1.3.xml
   )
 
   # Install desktop icons
   foreach (icon 32 48 64 128)
     install (FILES icons/fluid-${icon}.png
       DESTINATION ${FLTK_DATADIR}/icons/hicolor/${icon}x${icon}/apps
-      RENAME fluid.png
+      RENAME fluid1.3.png
     )
   endforeach()
 endif (UNIX)
diff --git i/src/CMakeLists.txt w/src/CMakeLists.txt
index d153b1cd7..88f3f1123 100644
--- i/src/CMakeLists.txt
+++ w/src/CMakeLists.txt
@@ -303,46 +303,6 @@ if (USE_XFT)
   endif (LIB_fontconfig)
 endif (USE_XFT)
 
-#######################################################################
-
-FL_ADD_LIBRARY (fltk STATIC "${STATIC_FILES}")
-target_link_libraries (fltk ${OPTIONAL_LIBS})
-
-#######################################################################
-
-FL_ADD_LIBRARY (fltk_forms STATIC "${FORMS_FILES}")
-target_link_libraries (fltk_forms fltk)
-
-#######################################################################
-
-FL_ADD_LIBRARY (fltk_images STATIC "${IMGCPPFILES}")
-target_link_libraries (fltk_images fltk)
-
-if (OPTION_USE_SYSTEM_LIBJPEG)
-  target_link_libraries (fltk_images ${FLTK_JPEG_LIBRARIES})
-else()
-  target_link_libraries (fltk_images fltk_jpeg)
-endif (OPTION_USE_SYSTEM_LIBJPEG)
-
-if (OPTION_USE_SYSTEM_ZLIB)
-  target_link_libraries (fltk_images ${FLTK_ZLIB_LIBRARIES})
-else()
-  target_link_libraries (fltk_images fltk_z)
-endif (OPTION_USE_SYSTEM_ZLIB)
-
-if (OPTION_USE_SYSTEM_LIBPNG)
-  target_link_libraries (fltk_images ${FLTK_PNG_LIBRARIES})
-else()
-  target_link_libraries (fltk_images fltk_png)
-endif (OPTION_USE_SYSTEM_LIBPNG)
-
-#######################################################################
-
-if (OPENGL_FOUND)
-  FL_ADD_LIBRARY (fltk_gl STATIC "${GLCPPFILES}")
-  target_link_libraries (fltk_gl fltk ${OPENGL_LIBRARIES})
-endif (OPENGL_FOUND)
-
 #######################################################################
 # Build shared libraries (optional)
 #######################################################################
