diff -ruN mkinitcpio-39.2.orig/functions mkinitcpio-39.2/functions
--- mkinitcpio-39.2.orig/functions	2025-09-03 22:59:16.263420361 +0200
+++ mkinitcpio-39.2/functions	2025-09-03 22:59:23.385388711 +0200
@@ -161,6 +161,14 @@
     printf '%s' "$kver"
 }
 
+kver_powerpc() {
+    local kver
+
+    read -r kver _ < \
+      <(strings "$1" | grep '^Linux version [0-9]' | awk '{print $3}' | head -n1)
+    printf '%s' "$kver"
+}
+
 detect_compression() {
     # Detect standard compressed files. Not Linux-kernel specific.
 
@@ -456,11 +464,17 @@
 
     local arch
     arch="$(uname -m)"
-    if [[ $arch == @(i?86|x86_64) ]]; then
-        kver="$(kver_x86 "$1")"
-    else
+    case "$arch" in
+       i?86|x86_64)
+         kver="$(kver_x86 "$1")"
+       ;;
+       ppc*)
+         kver="$(kver_powerpc "$1")"
+       ;;
+       *)
         kver="$(kver_generic "$1")"
-    fi
+       ;;
+    esac
 
     [[ "$kver" =~ $re ]] || return 1
 
@@ -1169,7 +1183,7 @@
         ln -s "../run"  "$root/var/run"
 
         case "$arch" in
-            x86_64)
+            riscv64|ppc64*|x86_64)
                 ln -s "lib"     "$root/usr/lib64"
                 ln -s "usr/lib" "$root/lib64"
                 ;;
diff -ruN mkinitcpio-39.2.orig/init_functions mkinitcpio-39.2/init_functions
--- mkinitcpio-39.2.orig/init_functions	2025-09-03 22:59:16.258327649 +0200
+++ mkinitcpio-39.2/init_functions	2025-09-03 23:00:01.352247701 +0200
@@ -35,6 +35,10 @@
     # tenths of a second
     sleepinterval=1
 
+    # hacky work around for archiso to find disk by label
+    # when booting from CD/DVD
+    udevadm trigger
+
     [ -b "$device" ] && return 0
 
     # assigned in /init
diff -ruN mkinitcpio-39.2.orig/install/fsck mkinitcpio-39.2/install/fsck
--- mkinitcpio-39.2.orig/install/fsck	2025-09-03 22:59:16.260275128 +0200
+++ mkinitcpio-39.2/install/fsck	2025-09-03 22:59:23.385974625 +0200
@@ -15,6 +15,10 @@
                     add_file /etc/e2fsck.conf
                 fi
                 ;;
+            hfs|hfsplus)
+                add_binary fsck.hfsplus
+                add_symlink /usr/bin/fsck.hfs fsck.hfsplus
+                ;;
             xfs)
                 add_binary fsck.xfs
                 add_binary xfs_repair
diff -ruN mkinitcpio-39.2.orig/install/kms mkinitcpio-39.2/install/kms
--- mkinitcpio-39.2.orig/install/kms	2025-09-03 22:59:16.258485165 +0200
+++ mkinitcpio-39.2/install/kms	2025-09-03 22:59:23.386243970 +0200
@@ -5,8 +5,10 @@
     # AGP and DRM modules for GPUs
     map add_checked_modules '/drivers/char/agp/' '/drivers/gpu/drm/'
 
-    # modules that implement the privacy screen interface
-    add_checked_modules_from_symbol 'drm_privacy_screen_register' '=drivers/platform'
+    # modules that implement the privacy screen interface on x86_64
+    if [ "$(uname -m)" == 'x86_64' ]; then
+      add_checked_modules_from_symbol 'drm_privacy_screen_register' '=drivers/platform'
+    fi
 }
 
 help() {
diff -ruN mkinitcpio-39.2.orig/mkinitcpio mkinitcpio-39.2/mkinitcpio
--- mkinitcpio-39.2.orig/mkinitcpio	2025-09-03 22:59:16.260337095 +0200
+++ mkinitcpio-39.2/mkinitcpio	2025-09-03 22:59:23.386624484 +0200
@@ -135,7 +135,7 @@
     error "invalid kernel specified: '%s'" "$1"
 
     arch="$(uname -m)"
-    if [[ "$arch" != @(i?86|x86_64) ]]; then
+    if [[ "$arch" != @(i?86|x86_64|ppc|ppc64|ppc64le|riscv64) ]]; then
         error "kernel version extraction from image not supported for '%s' architecture" "$arch"
         error "there's a chance the generic version extractor may work with a valid uncompressed kernel image"
     fi
diff -ruN mkinitcpio-39.2.orig/mkinitcpio.conf mkinitcpio-39.2/mkinitcpio.conf
--- mkinitcpio-39.2.orig/mkinitcpio.conf	2025-09-03 22:59:16.260414415 +0200
+++ mkinitcpio-39.2/mkinitcpio.conf	2025-09-03 22:59:23.387045283 +0200
@@ -52,7 +52,7 @@
 #
 ##   NOTE: If you have /usr on a separate partition, you MUST include the
 #    usr and fsck hooks.
-HOOKS=(base udev autodetect microcode modconf kms keyboard keymap consolefont block filesystems fsck)
+HOOKS=(base udev autodetect modconf kms keyboard keymap consolefont block filesystems fsck)
 
 # COMPRESSION
 # Use this to compress the initramfs image. By default, zstd compression
diff -ruN mkinitcpio-39.2.orig/test/cases/zsh-completion.bats mkinitcpio-39.2/test/cases/zsh-completion.bats
--- mkinitcpio-39.2.orig/test/cases/zsh-completion.bats	2025-09-03 22:59:16.262577678 +0200
+++ mkinitcpio-39.2/test/cases/zsh-completion.bats	2025-09-03 22:59:23.387320676 +0200
@@ -13,6 +13,9 @@
 }
 
 @test "_detect_kver" {
+    if [ "$(uname -m)" != 'x86_64' ]; then
+      skip "$(uname -m) unsupported"
+    fi
     local kernel_ver tmp_knl
     kernel_ver="6.0.9-arch1-1 #1 SMP PREEMPT_DYNAMIC Wed, 16 Nov 2022 17:01:17 +0000 x86_64 GNU/Linux"
     tmp_knl=$(__gen_test_kernel "$kernel_ver")
