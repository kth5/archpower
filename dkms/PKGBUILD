# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>
# Maintainer: SÃ©bastien Luttringer
# Maintainer: Christian Heusel <gromit@archlinux.org>
# Contributor: Balwinder S "bsd" Dheeman (bdheeman AT gmail.com)

pkgname=dkms
pkgver=3.2.1
pkgrel=1
pkgdesc='Dynamic Kernel Modules System'
arch=(any)
url='https://github.com/dell/dkms'
license=(GPL-2.0-or-later)
depends=(
  bash
  coreutils
  gawk
  gcc
  kmod
  make
  patch
  sed
)
makedepends=(
  git
)
optdepends_powerpc64le=('linux-headers: build modules against the default Arch POWER kernel'
                        'linux-4k-headers: build modules against the 4K page size kernel'
                        'linux-lts-6.1-headers: build modules against the LTS 6.1.x kernel'
                        'linux-lts-6.6-headers: build modules against the LTS 6.6.x kernel'
                        'linux-lts-6.12-headers: build modules against the LTS 6.12.x kernel')
optdepends_powerpc=('linux-headers: build modules against the default Arch POWER kernel'
                    'linux-g4-headers: build modules against the G4 optimized default kernel'
                    'linux-lts-6.1-headers: build modules against the LTS 6.1.x kernel'
                    'linux-lts-6.6-headers: build modules against the LTS 6.6.x kernel'
                    'linux-lts-6.12-headers: build modules against the LTS 6.12.x kernel'
                    'powerpc64-unknown-linux-gnu-gcc: build modules against the default Arch POWER powerpc64 kernel'
                    'linux-ppc64-headers: build modules against the default Arch POWER powerpc64 kernel')
optdepends_powerpc64=('linux-ppc64-headers: build modules against the default Arch POWER powerpc64 kernel')
backup=('etc/dkms/framework.conf')
install=$pkgname.install
source=("git+https://github.com/dell/dkms.git#tag=v$pkgver"
        'hook.install'
        'hook.remove'
        'hook.upgrade'
        'hook.sh')
sha256sums=('c4b9fab0a0fc0184e1b31b7aa914ab4994366e120ecfa90899bc72da1e314b59'
            'da2dd53bdb427c3ffbe793fd05f898d8a0545e6dbd346c85fad1717b0f838c62'
            '497422e72b2f10a71caae40c44a07b215425d393acb365700e38944e09f9a554'
            'cc04280e8eb095f4950f5e3c6b2997fbc8d5862d79c5ae29d5943b8ac204d0d4'
            'c1b4a4e2e4e0e0e59ee0887403e79d60b209f3878dbbec6612573f13b90cce01')

package() {
  # alpm hooks
  install -D -m 644 hook.install "$pkgdir/usr/share/libalpm/hooks/70-dkms-install.hook"
  # both upgrade and remove hooks are removing dkms modules.
  # remove always call depmod while upgrade never, as install will later.
  # upgrade is run before remove in order to have the cleanest depmod file,
  # if something goes wrong before the depmod call in install hook.
  install -D -m 644 hook.upgrade "$pkgdir/usr/share/libalpm/hooks/70-dkms-upgrade.hook"
  install -D -m 644 hook.remove "$pkgdir/usr/share/libalpm/hooks/71-dkms-remove.hook"
  # hook helper
  install -D -m 755 hook.sh "$pkgdir/usr/share/libalpm/scripts/dkms"
  # upstream installer
  cd dkms
  # we don't need kconf files and libdir is only for debian stuff, so
  # we install them outside of $pkgdir
  make \
    DESTDIR="$pkgdir" \
    SBIN=/usr/bin \
    KCONF=/../trash \
    LIBDIR=/../trash \
    MODDIR=/usr/lib/modules \
    install
}

# vim:set ts=2 sw=2 et:
